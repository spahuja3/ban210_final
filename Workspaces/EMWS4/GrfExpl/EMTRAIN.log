MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 16, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "02:18:17 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                April 16, 2022
Time:                02:18:17 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O045YT5N "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O045YT5N new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 16, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "02:18:17 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                manas";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70192439";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8HOME";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 16, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "02:18:17 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                manas";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\\127097210_Pahuja\Workspaces\EMWS4\GrfExpl\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
21258      proc freq data=EMWS4.GrfExpl_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS4.GrfExpl_VariableSet noprint;
21259      table ROLE*LEVEL/out=WORK.GrfExplMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.GrfExplMETA;
21260      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS4.GRFEXPL_VARIABLESET.
NOTE: The data set WORK.GRFEXPLMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      

21261      proc print data=WORK.GrfExplMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.GrfExplMETA label noobs;
21262      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
21263      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
21264      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21265      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
21266      run;

NOTE: There were 4 observations read from the data set WORK.GRFEXPLMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds
      

21267      title10;
MPRINT(EM_DIAGRAM):   title10;
21268      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * GrfExpl: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * GrfExpl: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '127097210_Pahuja';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'explore';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS4.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21587      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21588      * GrfExpl: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * GrfExpl: Generation of macros and macro variables;
21589      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
21590      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

21591      %let EMEXCEPTIONSTRING=;
21592      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21593      * TRAIN: GrfExpl;
MPRINT(EM_DIAGRAM):   * TRAIN: GrfExpl;
21594      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21595      %let EM_ACTION = TRAIN;
21596      %let syscc = 0;
21597      %macro main;
21598         filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
21599         %include temp;
21600         filename temp;
21601      
21602         %SetProperties;
21603      
21604         %if %upcase(&EM_ACTION) = CREATE %then %do;
21605      
21606             filename temp catalog 'sashelp.emexpl.graphexplore_create.source';
21607             %include temp;
21608             filename temp;
21609             %create;
21610         %end;
21611         %else
21612         %if %upcase(&EM_ACTION) = TRAIN %then %do;
21613      
21614             filename temp catalog 'sashelp.emexpl.graphexplore_train.source';
21615             %include temp;
21616             filename temp;
21617             %train;
21618      
21619         %end;
21620         %else
21621         %if %upcase(&EM_ACTION) = REPORT %then %do;
21622      
21623             filename temp catalog 'sashelp.emexpl.graphexplore_report.source';
21624             %include temp;
21625             filename temp;
21626      
21627             %report;
21628         %end;
21629      
21630      %mend main;
21631      
21632      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.graphexplore_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_MACROS.SOURCE.
21633     +%macro SetProperties;
21634     +   %em_checkmacro(name=EM_PROPERTY_INTERVALBYTARGET,      global=Y, value=Y);
21635     +   %em_checkmacro(name=EM_PROPERTY_CLASSBYTARGET,         global=Y, value=Y);
21636     +   %em_checkmacro(name=EM_PROPERTY_DATASOURCE,            global=Y, value=SAMPLE);
21637     +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLEMETHOD,        global=Y, value=FIRSTN);
21638     +   %em_checkmacro(name=EM_PROPERTY_EMSAMPLESIZE,          global=Y, value=DEFAULT);
21639     +   %em_checkmacro(name=EM_PROPERTY_EMRANDOMSEED,          global=Y, value=12345);
21640     +
21641     +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.graphexplore_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.GRAPHEXPLORE_TRAIN.SOURCE.
21642     +%macro train;
21643     +
21644     +    %let graphData = &em_import_data;
21645     +    %if "&graphData" eq "" %then
21646     +        %let graphData = &em_import_transaction;
21647     +    %if "&graphData" eq "" %then
21648     +        %let graphData = &em_import_document;
21649     +    %if "&graphData" eq "" %then
21650     +        %let graphData = &em_import_validate;
21651     +    %if "&graphData" eq "" %then
21652     +        %let graphData = &em_import_test;
21653     +    %if "&graphData" eq "" %then
21654     +        %let graphData = &em_import_score;
21655     +
21656     +    %if "&graphData" eq "" %then %do;
21657     +        %let emexceptionString = exception.server.IMPORT.NODATA;
21658     +        %goto doendm;
21659     +    %end;
21660     +
21661     +    %em_getname(key=SAMPLE_DATA, type=DATA);
21662     +
21663     +    filename vartemp catalog 'sashelp.emutil.em_varmacro.source';
21664     +    %include vartemp;
21665     +    filename vartemp;
21666     +
21667     +    data tempVariableSet;
21668     +       set &em_data_variableset;
21669     +       where (ROLE = 'REJECTED' and USE='Y') or ROLE='FREQ' or ( ROLE ne 'REJECTED' and USE in('Y', 'D'));
21670     +       if _N_< 950 or (ROLE = 'TARGET' and USE in('Y', 'D')) or ROLE='FREQ' then output;
21671     +    run;
21672     +    %em_varMacro(name=varSample, metadata=tempVariableSet, where=, key=NAME, nummacro=numVarSample);
21673     +
21674     +
21675     +     %exploreSample(DATA=&graphData, OUTPUT=&EM_USER_SAMPLE_DATA, METADATA=&EM_DATA_VARIABLESET, VARS=%varSample,
21676     +                      METHOD=&EM_PROPERTY_EMSAMPLEMETHOD, SIZE=&EM_PROPERTY_EMSAMPLESIZE,
21677     +                      ALPHA=, PVALUE=, SEED=&EM_PROPERTY_EMRANDOMSEED);
21678     +
21679     +    %doendm:
21680     +
21681     +%mend train;
21682     +
21683     +%train;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename vartemp catalog 'sashelp.emutil.em_varmacro.source';
NOTE: %INCLUDE (level 2) file VARTEMP is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
21685     +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
21687     +   filename macFile catalog 'work.emutil.macro.source';
21688     +   %let _METAOBS = 0;
21689     +   %let _maxvar = &maxvar;
21690     +   %if "&_maxvar" eq "" %then %let maxvar = -1;
21692     +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
21693     +                   or (&metadata eq ) %then %do;
21694     +       %put * No metadata data set defined;
21695     +       %goto doend;
21696     +   %end;
21698     +   data _null_;
21699     +      length _STRING_ $80;
21700     +      retain _STRING_ '' maxvar 0;
21701     +      set &metadata end=eof;
21702     +      file macFile;
21703     +      %if %nrbquote(&where) ne %then %do;
21704     +          %let whereClause = where (%nrbquote(&where));
21705     +          %unquote(&whereClause);
21706     +      %end;
21707     +      if _N_=1 then do;
21708     +         string = "%"!!"macro &name;";
21709     +         put string;
21710     +      end;
21711     +      maxvar +1;
21712     +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
21713     +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
21714     +         if eof
21715     +            %if  %sysevalf(&_maxvar > 0) %then %do;
21716     +                or maxvar >= &maxvar
21717     +            %end;
21718     +            then do;
21719     +            put _STRING_;
21720     +            string = "%"!!"mend &name;";
21721     +            put string;
21722     +            string = strip(put(_N_, best.));
21723     +            call symput('_METAOBS', string);
21724     +            %if (&nummacro ne ) %then %do;
21725     +                put "%" "global &nummacro;";
21726     +                put "%" "let &nummacro = " string ";";
21727     +            %end;
21728     +            stop;
21729     +         end;
21730     +      end;
21731     +      else do;
21732     +         put _STRING_;
21733     +         _string_ = TRIM(&key);
21734     +         if eof
21735     +            %if  %sysevalf(&_maxvar > 0) %then %do;
21736     +              or maxvar >= &maxvar
21737     +           %end;
21738     +            then do;
21739     +            put _STRING_;
21740     +            string = "%"!!"mend &name;";
21741     +            put string;
21742     +        end;
21743     +      end;
21744     +      if eof
21745     +         %if  %sysevalf(&_maxvar > 0) %then %do;
21746     +             or maxvar >= &maxvar
21747     +         %end;
21748     +         then do;
21749     +         string = strip(put(_N_, best.));
21750     +         call symput('_METAOBS', string);
21751     +         %if (&nummacro ne ) %then %do;
21752     +             put "%" "global &nummacro;";
21753     +             put "%" "let &nummacro = " string ";";
21754     +         %end;
21755     +         stop;
21756     +      end;
21757     +   run;
21759     +   %doend:
21760     +   %if ^&_METAOBS %then %do;
21761     +       data _null_;
21762     +          file macFile;
21763     +          put "%" "macro &name;";
21764     +          put "%" "mend &name;";
21765     +          %if (&nummacro ne ) %then %do;
21766     +              put "%" "global &nummacro;";
21767     +              put "%" "let &nummacro = 0;";
21768     +          %end;
21769     +      run;
21770     +   %end;
21771     +   %inc macFile;
21772     +   filename macFile;
21773     +%mend em_varMacro;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
MPRINT(TRAIN):   filename vartemp;
NOTE: Fileref VARTEMP has been deassigned.
MPRINT(TRAIN):   data tempVariableSet;
MPRINT(TRAIN):   set EMWS4.GrfExpl_VariableSet;
MPRINT(TRAIN):   where (ROLE = 'REJECTED' and USE='Y') or ROLE='FREQ' or ( ROLE ne 'REJECTED' and USE in('Y', 'D'));
MPRINT(TRAIN):   if _N_< 950 or (ROLE = 'TARGET' and USE in('Y', 'D')) or ROLE='FREQ' then output;
MPRINT(TRAIN):   run;

NOTE: There were 13 observations read from the data set EMWS4.GRFEXPL_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (USE='Y')) or (ROLE='FREQ') or ((ROLE not = 'REJECTED') and USE in ('D', 'Y'));
NOTE: The data set WORK.TEMPVARIABLESET has 13 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_VARMACRO):   filename macFile catalog 'work.emutil.macro.source';
MPRINT(EM_VARMACRO):   data _null_;
MPRINT(EM_VARMACRO):   length _STRING_ $80;
MPRINT(EM_VARMACRO):   retain _STRING_ '' maxvar 0;
MPRINT(EM_VARMACRO):   set tempVariableSet end=eof;
MPRINT(EM_VARMACRO):   file macFile;
MPRINT(EM_VARMACRO):   if _N_=1 then do;
MPRINT(EM_VARMACRO):   string = "%"!!"macro varSample;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   maxvar +1;
MPRINT(EM_VARMACRO):   if (length(_STRING_) + length(trim(NAME))+ 4 < 80) then do;
MPRINT(EM_VARMACRO):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend varSample;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   put "%" "global numVarSample;";
MPRINT(EM_VARMACRO):   put "%" "let numVarSample = " string ";";
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   else do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   _string_ = TRIM(NAME);
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend varSample;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   put "%" "global numVarSample;";
MPRINT(EM_VARMACRO):   put "%" "let numVarSample = " string ";";
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   run;

NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sat, 16 Apr, 2022 02:18:19 AM,
      Last Modified=Sat, 16 Apr, 2022 02:18:19 AM,
      Filename=C:\Users\manas\AppData\Local\Temp\SAS Temporary Files\_TD9728_DESKTOP-GPKLHDH_\Prc2\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME

NOTE: 6 records were written to the file MACFILE.
      The minimum record length was 16.
      The maximum record length was 66.
NOTE: There were 13 observations read from the data set WORK.TEMPVARIABLESET.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 2) file MACFILE is file WORK.EMUTIL.MACRO.SOURCE.
21774     +%macro varSample;
21775     +AvgAge AvgTumorSize Avginv_node_group age breast breast_quad class
21776     +deg_malig inv_nodes irradiat menopause node_caps tumor_size
21777     +%mend varSample;
21778     +%global numVarSample;
21779     +%let numVarSample = 13 ;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
MPRINT(EM_VARMACRO):   filename macFile;
NOTE: Fileref MACFILE has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 2) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
21780     +/*------------------------------------------------------------------
21781     +  MACRO EXPLOREOBS
21782     +
21783     +  SUPPORT:  SASDHD - David Duling
21784     +  PRODUCT:  Enterprise Miner
21785     +
21786     +  DESCRIPTION:
21787     +  Generates maximum and default numbers of observations to
21788     +  download for visualization depending on the record length.
21789     +
21790     +  Values were determined by trial and error using typical
21791     +  Windows workstation configurations.
21792     +
21793     +  Discrete sets of values are returned so that user experience
21794     +  will be consitent with similar sized data sets.
21795     +
21796     +  These macro variables are set:
21797     +  _exploreobs_max -- maximum number of obs downloadable
21798     +  _exploreobs_def -- default number of obs to be downloaded
21799     +  _exploreobs_recl - record length.  Might be useful for reporting.
21800     +
21801     +  Use the _exploreobs_max to set limit the GUI selection of
21802     +  observations for downloading.  The GUI selection for obs
21803     +  could be reduced to "Default" and "Max".
21804     +
21805     +  Parameters
21806     +  data=   libname.memname of input data
21807     +  vars=   subset list of variables.
21808     +          downloading 1 out of 500 really does work like downloading
21809     +          1 out of 1 vars.  Users may select a subset of vars for
21810     +                   visualizations.  Pass in the list as space delimited
21811     +          var names.  If vars is not specified, the record length
21812     +          of the entire data will be used.
21813     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
21814     +
21815     +  Control
21816     +  Users may control the values by entering these macro variables.
21817     +            EM_EXPLOREOBS_MAX
21818     +            EM_EXPLOREOBS_DEFAULT
21819     +  These values override the computed values.
21820     +
21821     +  Debugging
21822     +  %let _exploreobs_debug=1 ;
21823     +--------------------------------------------------------------------
21824     +  HISTORY: 20APR2004. sasdhd. pushed.
21825     +           18DEC2004. sasdhd. S0280556.
21826     +           07SEP2007. sasdhd. HK1009586
21827     +--------------------------------------------------------------------*/
21828     +
21829     +%macro exploreobs(data=,vars=, nbytes=) ;
21830     +
21831     +   /*--- variable definitions ---*/
21832     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
21833     +   %local xobs xvars xlen vlen xi vname vlist ;
21834     +   %local _exp_source _exp_notes ;
21835     +
21836     +   /*--- USER definitions ---*/
21837     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
21838     +
21839     +   /*--- variable intializations ---*/
21840     +   %let _exploreobs_max=0 ;
21841     +   %let _exploreobs_def=0 ;
21842     +   %let _exploreobs_recl=0 ;
21843     +   %let xvars= 0 ;
21844     +   %let xlen = 0 ;
21845     +   %let xobs = 0 ;
21846     +
21847     +   /*--- data error checks ---*/
21848     +   %if "&data" eq "" %then %do ;
21849     +            %put NOTE: DATA is not specified. ;
21850     +            %goto term ;
21851     +      %end ;
21852     +
21853     +   %let dsid=%sysfunc(open(&data)) ;
21854     +   %if not &dsid %then %do ;
21855     +            %put NOTE: DATA &data is not available. ;
21856     +            %goto term ;
21857     +      %end ;
21858     +
21859     +   /*--- if a vars list exists generate a subset ---*/
21860     +   %if &vars ne %then %do ;
21861     +         %let dsid=%sysfunc(close(&dsid)) ;
21862     +         %if &_exploreobs_debug ne 1 %then %do ;
21863     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
21864     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
21865     +                  options nosource nonotes ;
21866     +         %end ;
21867     +         data _exploreobs_temp_data ;
21868     +         set &data(obs=0) ;
21869     +          keep &vars ;
21870     +         run;
21871     +         %if &_exploreobs_debug ne 1 %then %do ;
21872     +                  options &_exp_source &_exp_notes ;
21873     +         %end ;
21874     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
21875     +         %if &dsid eq 0 %then %do ;
21876     +                  %put NOTE: Sample is not available.;
21877     +                  %goto term ;
21878     +            %end ;
21879     +      %end ;
21880     +
21881     +   /*--- get var attributes ---*/
21882     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
21883     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
21884     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
21885     +   %let dsid= %sysfunc(close(&dsid)) ;
21886     +
21887     +   /*--- set default and max obs ---*/
21888     +   %let _exploreobs_recl=%eval(&xlen) ;
21889     +   %if &_exploreobs_recl eq 0 %then %do ;
21890     +             %let _exploreobs_max= 0 ;
21891     +             %let _exploreobs_def= 0 ;
21892     +             %goto term ;
21893     +
21894     +   %end ;
21895     +   %else
21896     +   %if &_exploreobs_recl le 32 %then %do ;
21897     +             %let _exploreobs_max=100000 ;
21898     +             %let _exploreobs_def= 10000 ;
21899     +   %end ;
21900     +   %else
21901     +   %if &_exploreobs_recl le 128 %then %do ;
21902     +             %let _exploreobs_max=60000 ;
21903     +             %let _exploreobs_def= 6000 ;
21904     +   %end ;
21905     +   %else
21906     +   %if &_exploreobs_recl lt 1000 %then %do ;
21907     +             %let _exploreobs_max=20000 ;
21908     +             %let _exploreobs_def= 2000 ;
21909     +   %end ;
21910     +   %else
21911     +   %if &_exploreobs_recl lt 5000 %then %do ;
21912     +             %let _exploreobs_max= 10000 ;
21913     +             %let _exploreobs_def=  1000 ;
21914     +   %end ;
21915     +   %else
21916     +   %if &_exploreobs_recl lt 20000 %then %do ;
21917     +             %let _exploreobs_max= 5000 ;
21918     +             %let _exploreobs_def=  500 ;
21919     +   %end ;
21920     +   %else %do ;
21921     +             %let _exploreobs_max= 1000 ;
21922     +             %let _exploreobs_def=  200 ;
21923     +   %end ;
21924     +
21925     +   /*--- Users options ---*/
21926     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
21927     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
21928     +   %end;
21929     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
21930     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
21931     +   %end;
21932     +
21933     +    /*--- S0868273 ---*/
21934     +    %if "&NBYTES" ne "" %then %do;
21935     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
21936     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
21937     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
21938     +       %end;
21939     +
21940     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
21941     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
21942     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
21943     +          %if ^&_exploreobs_def %then
21944     +              %let _exploreobs_def = 1;
21945     +
21946     +       %end;
21947     +    %end;
21948     +
21949     +   /*--- Terminate ---*/
21950     +   %term:
21951     +
21952     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
21953     +%mend ;
21954     +
21955     +
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
MPRINT(EXPLOREOBS):   options nosource nonotes ;
MPRINT(EXPLOREOBS):   data _exploreobs_temp_data ;
MPRINT(EXPLOREOBS):   set EMWS4.Ids_DATA(obs=0) ;
MPRINT(EXPLOREOBS):   keep AvgAge AvgTumorSize Avginv_node_group age breast breast_quad class deg_malig inv_nodes irradiat menopause node_caps tumor_size ;
MPRINT(EXPLOREOBS):   run;
MPRINT(EXPLOREOBS):   options SOURCE NOTES ;
NOTE: EXPLOREOBS EMWS4.Ids_DATA : vars= 13 : recl= 96 : max=60000 : def= 6000
MPRINT(EXPLORESAMPLE):   ;
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
MPRINT(HPDM_PERFORMANCE):  ;
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS4.GrfExpl_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS4.Ids_DATA(obs= 6000 Keep=AvgAge AvgTumorSize Avginv_node_group age breast breast_quad class deg_malig inv_nodes irradiat menopause node_caps tumor_size );
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
MPRINT(EXPLORESAMPLE):   run;

NOTE: View EMWS4.IDS_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 286 observations read from the data set BAN210.EBREASTCANCER.
NOTE: There were 286 observations read from the data set EMWS4.IDS_DATA.
NOTE: The data set EMWS4.GRFEXPL_SAMPLE_DATA has 286 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename vartemp catalog 'sashelp.emutil.em_varmacro.source';
NOTE: %INCLUDE (level 1) file VARTEMP is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
21957     +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
21959     +   filename macFile catalog 'work.emutil.macro.source';
21960     +   %let _METAOBS = 0;
21961     +   %let _maxvar = &maxvar;
21962     +   %if "&_maxvar" eq "" %then %let maxvar = -1;
21964     +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
21965     +                   or (&metadata eq ) %then %do;
21966     +       %put * No metadata data set defined;
21967     +       %goto doend;
21968     +   %end;
21970     +   data _null_;
21971     +      length _STRING_ $80;
21972     +      retain _STRING_ '' maxvar 0;
21973     +      set &metadata end=eof;
21974     +      file macFile;
21975     +      %if %nrbquote(&where) ne %then %do;
21976     +          %let whereClause = where (%nrbquote(&where));
21977     +          %unquote(&whereClause);
21978     +      %end;
21979     +      if _N_=1 then do;
21980     +         string = "%"!!"macro &name;";
21981     +         put string;
21982     +      end;
21983     +      maxvar +1;
21984     +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
21985     +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
21986     +         if eof
21987     +            %if  %sysevalf(&_maxvar > 0) %then %do;
21988     +                or maxvar >= &maxvar
21989     +            %end;
21990     +            then do;
21991     +            put _STRING_;
21992     +            string = "%"!!"mend &name;";
21993     +            put string;
21994     +            string = strip(put(_N_, best.));
21995     +            call symput('_METAOBS', string);
21996     +            %if (&nummacro ne ) %then %do;
21997     +                put "%" "global &nummacro;";
21998     +                put "%" "let &nummacro = " string ";";
21999     +            %end;
22000     +            stop;
22001     +         end;
22002     +      end;
22003     +      else do;
22004     +         put _STRING_;
22005     +         _string_ = TRIM(&key);
22006     +         if eof
22007     +            %if  %sysevalf(&_maxvar > 0) %then %do;
22008     +              or maxvar >= &maxvar
22009     +           %end;
22010     +            then do;
22011     +            put _STRING_;
22012     +            string = "%"!!"mend &name;";
22013     +            put string;
22014     +        end;
22015     +      end;
22016     +      if eof
22017     +         %if  %sysevalf(&_maxvar > 0) %then %do;
22018     +             or maxvar >= &maxvar
22019     +         %end;
22020     +         then do;
22021     +         string = strip(put(_N_, best.));
22022     +         call symput('_METAOBS', string);
22023     +         %if (&nummacro ne ) %then %do;
22024     +             put "%" "global &nummacro;";
22025     +             put "%" "let &nummacro = " string ";";
22026     +         %end;
22027     +         stop;
22028     +      end;
22029     +   run;
22031     +   %doend:
22032     +   %if ^&_METAOBS %then %do;
22033     +       data _null_;
22034     +          file macFile;
22035     +          put "%" "macro &name;";
22036     +          put "%" "mend &name;";
22037     +          %if (&nummacro ne ) %then %do;
22038     +              put "%" "global &nummacro;";
22039     +              put "%" "let &nummacro = 0;";
22040     +          %end;
22041     +      run;
22042     +   %end;
22043     +   %inc macFile;
22044     +   filename macFile;
22045     +%mend em_varMacro;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename vartemp;
NOTE: Fileref VARTEMP has been deassigned.
MPRINT(TRAIN):   data tempVariableSet;
MPRINT(TRAIN):   set EMWS4.GrfExpl_VariableSet;
MPRINT(TRAIN):   where (ROLE = 'REJECTED' and USE='Y') or ROLE='FREQ' or ( ROLE ne 'REJECTED' and USE in('Y', 'D'));
MPRINT(TRAIN):   if _N_< 950 or (ROLE = 'TARGET' and USE in('Y', 'D')) or ROLE='FREQ' then output;
MPRINT(TRAIN):   run;

NOTE: There were 13 observations read from the data set EMWS4.GRFEXPL_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (USE='Y')) or (ROLE='FREQ') or ((ROLE not = 'REJECTED') and USE in ('D', 'Y'));
NOTE: The data set WORK.TEMPVARIABLESET has 13 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_VARMACRO):   filename macFile catalog 'work.emutil.macro.source';
MPRINT(EM_VARMACRO):   data _null_;
MPRINT(EM_VARMACRO):   length _STRING_ $80;
MPRINT(EM_VARMACRO):   retain _STRING_ '' maxvar 0;
MPRINT(EM_VARMACRO):   set tempVariableSet end=eof;
MPRINT(EM_VARMACRO):   file macFile;
MPRINT(EM_VARMACRO):   if _N_=1 then do;
MPRINT(EM_VARMACRO):   string = "%"!!"macro varSample;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   maxvar +1;
MPRINT(EM_VARMACRO):   if (length(_STRING_) + length(trim(NAME))+ 4 < 80) then do;
MPRINT(EM_VARMACRO):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend varSample;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   put "%" "global numVarSample;";
MPRINT(EM_VARMACRO):   put "%" "let numVarSample = " string ";";
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   else do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   _string_ = TRIM(NAME);
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend varSample;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   put "%" "global numVarSample;";
MPRINT(EM_VARMACRO):   put "%" "let numVarSample = " string ";";
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   run;

NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sat, 16 Apr, 2022 02:18:19 AM,
      Last Modified=Sat, 16 Apr, 2022 02:18:19 AM,
      Filename=C:\Users\manas\AppData\Local\Temp\SAS Temporary Files\_TD9728_DESKTOP-GPKLHDH_\Prc2\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME

NOTE: 6 records were written to the file MACFILE.
      The minimum record length was 16.
      The maximum record length was 66.
NOTE: There were 13 observations read from the data set WORK.TEMPVARIABLESET.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file MACFILE is file WORK.EMUTIL.MACRO.SOURCE.
22046     +%macro varSample;
22047     +AvgAge AvgTumorSize Avginv_node_group age breast breast_quad class
22048     +deg_malig inv_nodes irradiat menopause node_caps tumor_size
22049     +%mend varSample;
22050     +%global numVarSample;
22051     +%let numVarSample = 13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_VARMACRO):   filename macFile;
NOTE: Fileref MACFILE has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
NOTE: %INCLUDE (level 1) file X is file SASHELP.EMUTIL.EXPLOREOBS.SOURCE.
22052     +/*------------------------------------------------------------------
22053     +  MACRO EXPLOREOBS
22054     +
22055     +  SUPPORT:  SASDHD - David Duling
22056     +  PRODUCT:  Enterprise Miner
22057     +
22058     +  DESCRIPTION:
22059     +  Generates maximum and default numbers of observations to
22060     +  download for visualization depending on the record length.
22061     +
22062     +  Values were determined by trial and error using typical
22063     +  Windows workstation configurations.
22064     +
22065     +  Discrete sets of values are returned so that user experience
22066     +  will be consitent with similar sized data sets.
22067     +
22068     +  These macro variables are set:
22069     +  _exploreobs_max -- maximum number of obs downloadable
22070     +  _exploreobs_def -- default number of obs to be downloaded
22071     +  _exploreobs_recl - record length.  Might be useful for reporting.
22072     +
22073     +  Use the _exploreobs_max to set limit the GUI selection of
22074     +  observations for downloading.  The GUI selection for obs
22075     +  could be reduced to "Default" and "Max".
22076     +
22077     +  Parameters
22078     +  data=   libname.memname of input data
22079     +  vars=   subset list of variables.
22080     +          downloading 1 out of 500 really does work like downloading
22081     +          1 out of 1 vars.  Users may select a subset of vars for
22082     +                   visualizations.  Pass in the list as space delimited
22083     +          var names.  If vars is not specified, the record length
22084     +          of the entire data will be used.
22085     +  NBYTES=   maximum number of bytes that shouldn't be exceeded.
22086     +
22087     +  Control
22088     +  Users may control the values by entering these macro variables.
22089     +            EM_EXPLOREOBS_MAX
22090     +            EM_EXPLOREOBS_DEFAULT
22091     +  These values override the computed values.
22092     +
22093     +  Debugging
22094     +  %let _exploreobs_debug=1 ;
22095     +--------------------------------------------------------------------
22096     +  HISTORY: 20APR2004. sasdhd. pushed.
22097     +           18DEC2004. sasdhd. S0280556.
22098     +           07SEP2007. sasdhd. HK1009586
22099     +--------------------------------------------------------------------*/
22100     +
22101     +%macro exploreobs(data=,vars=, nbytes=) ;
22102     +
22103     +   /*--- variable definitions ---*/
22104     +   %global _exploreobs_max _exploreobs_def _exploreobs_recl _exploreobs_debug ;
22105     +   %local xobs xvars xlen vlen xi vname vlist ;
22106     +   %local _exp_source _exp_notes ;
22107     +
22108     +   /*--- USER definitions ---*/
22109     +   %global EM_EXPLOREOBS_MAX EM_EXPLOREOBS_DEFAULT ;
22110     +
22111     +   /*--- variable intializations ---*/
22112     +   %let _exploreobs_max=0 ;
22113     +   %let _exploreobs_def=0 ;
22114     +   %let _exploreobs_recl=0 ;
22115     +   %let xvars= 0 ;
22116     +   %let xlen = 0 ;
22117     +   %let xobs = 0 ;
22118     +
22119     +   /*--- data error checks ---*/
22120     +   %if "&data" eq "" %then %do ;
22121     +            %put NOTE: DATA is not specified. ;
22122     +            %goto term ;
22123     +      %end ;
22124     +
22125     +   %let dsid=%sysfunc(open(&data)) ;
22126     +   %if not &dsid %then %do ;
22127     +            %put NOTE: DATA &data is not available. ;
22128     +            %goto term ;
22129     +      %end ;
22130     +
22131     +   /*--- if a vars list exists generate a subset ---*/
22132     +   %if &vars ne %then %do ;
22133     +         %let dsid=%sysfunc(close(&dsid)) ;
22134     +         %if &_exploreobs_debug ne 1 %then %do ;
22135     +                  %let _exp_source=%sysfunc(getoption(SOURCE)) ;
22136     +            %let _exp_notes =%sysfunc(getoption(NOTES)) ;
22137     +                  options nosource nonotes ;
22138     +         %end ;
22139     +         data _exploreobs_temp_data ;
22140     +         set &data(obs=0) ;
22141     +          keep &vars ;
22142     +         run;
22143     +         %if &_exploreobs_debug ne 1 %then %do ;
22144     +                  options &_exp_source &_exp_notes ;
22145     +         %end ;
22146     +         %let dsid=%sysfunc(open(_exploreobs_temp_data)) ;
22147     +         %if &dsid eq 0 %then %do ;
22148     +                  %put NOTE: Sample is not available.;
22149     +                  %goto term ;
22150     +            %end ;
22151     +      %end ;
22152     +
22153     +   /*--- get var attributes ---*/
22154     +   %let xvars=%sysfunc(attrn(&dsid,nvars)) ;
22155     +   %let xobs= %sysfunc(attrn(&dsid,nobs )) ;
22156     +   %let xlen= %sysfunc(attrn(&dsid,lrecl)) ;
22157     +   %let dsid= %sysfunc(close(&dsid)) ;
22158     +
22159     +   /*--- set default and max obs ---*/
22160     +   %let _exploreobs_recl=%eval(&xlen) ;
22161     +   %if &_exploreobs_recl eq 0 %then %do ;
22162     +             %let _exploreobs_max= 0 ;
22163     +             %let _exploreobs_def= 0 ;
22164     +             %goto term ;
22165     +
22166     +   %end ;
22167     +   %else
22168     +   %if &_exploreobs_recl le 32 %then %do ;
22169     +             %let _exploreobs_max=100000 ;
22170     +             %let _exploreobs_def= 10000 ;
22171     +   %end ;
22172     +   %else
22173     +   %if &_exploreobs_recl le 128 %then %do ;
22174     +             %let _exploreobs_max=60000 ;
22175     +             %let _exploreobs_def= 6000 ;
22176     +   %end ;
22177     +   %else
22178     +   %if &_exploreobs_recl lt 1000 %then %do ;
22179     +             %let _exploreobs_max=20000 ;
22180     +             %let _exploreobs_def= 2000 ;
22181     +   %end ;
22182     +   %else
22183     +   %if &_exploreobs_recl lt 5000 %then %do ;
22184     +             %let _exploreobs_max= 10000 ;
22185     +             %let _exploreobs_def=  1000 ;
22186     +   %end ;
22187     +   %else
22188     +   %if &_exploreobs_recl lt 20000 %then %do ;
22189     +             %let _exploreobs_max= 5000 ;
22190     +             %let _exploreobs_def=  500 ;
22191     +   %end ;
22192     +   %else %do ;
22193     +             %let _exploreobs_max= 1000 ;
22194     +             %let _exploreobs_def=  200 ;
22195     +   %end ;
22196     +
22197     +   /*--- Users options ---*/
22198     +   %if &EM_EXPLOREOBS_MAX ne %then %do ;
22199     +            %let _exploreobs_max= %eval(&EM_EXPLOREOBS_MAX) ;
22200     +   %end;
22201     +   %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
22202     +            %let _exploreobs_def= %eval(&EM_EXPLOREOBS_DEFAULT) ;
22203     +   %end;
22204     +
22205     +    /*--- S0868273 ---*/
22206     +    %if "&NBYTES" ne "" %then %do;
22207     +       %let nbytes_nrows = %eval(&nbytes/ &_exploreobs_recl);
22208     +       %if &EM_EXPLOREOBS_MAX ne %then %do ;
22209     +           %let _exploreobs_max   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_MAX));
22210     +       %end;
22211     +
22212     +       %if &EM_EXPLOREOBS_DEFAULT ne %then %do ;
22213     +          %let nbytes_nrows      = %eval(&nbytes_nrows/10);
22214     +          %let _exploreobs_def   = %sysfunc(min(&nbytes_nrows , &EM_EXPLOREOBS_DEFAULT));
22215     +          %if ^&_exploreobs_def %then
22216     +              %let _exploreobs_def = 1;
22217     +
22218     +       %end;
22219     +    %end;
22220     +
22221     +   /*--- Terminate ---*/
22222     +   %term:
22223     +
22224     +   %put NOTE: EXPLOREOBS &data : vars= &xvars : recl= &_exploreobs_recl : max=&_exploreobs_max : def= &_exploreobs_def ;
22225     +%mend ;
22226     +
22227     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
MPRINT(EXPLOREOBS):   options nosource nonotes ;
MPRINT(EXPLOREOBS):   data _exploreobs_temp_data ;
MPRINT(EXPLOREOBS):   set EMWS4.Ids_DATA(obs=0) ;
MPRINT(EXPLOREOBS):   keep AvgAge AvgTumorSize Avginv_node_group age breast breast_quad class deg_malig inv_nodes irradiat menopause node_caps tumor_size ;
MPRINT(EXPLOREOBS):   run;
MPRINT(EXPLOREOBS):   options SOURCE NOTES ;
NOTE: EXPLOREOBS EMWS4.Ids_DATA : vars= 13 : recl= 96 : max=60000 : def= 6000
MPRINT(EXPLORESAMPLE):   ;
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
MPRINT(HPDM_PERFORMANCE):  ;
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS4.GrfExpl_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS4.Ids_DATA(obs= 6000 Keep=AvgAge AvgTumorSize Avginv_node_group age breast breast_quad class deg_malig inv_nodes irradiat menopause node_caps tumor_size );
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
MPRINT(EXPLORESAMPLE):   run;

NOTE: View EMWS4.IDS_DATA.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 286 observations read from the data set BAN210.EBREASTCANCER.
NOTE: There were 286 observations read from the data set EMWS4.IDS_DATA.
NOTE: The data set EMWS4.GRFEXPL_SAMPLE_DATA has 286 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: GrfExpl;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22228      *------------------------------------------------------------*;
22229      * End TRAIN: GrfExpl;
22230      *------------------------------------------------------------*;
22231      

22232      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22233      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
22234      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22235      ;
MPRINT(EM_DIAGRAM):   ;
22236      ;
MPRINT(EM_DIAGRAM):   ;
22237      ;
MPRINT(EM_DIAGRAM):   ;
22238      ;
MPRINT(EM_DIAGRAM):   ;
22239      quit;
MPRINT(EM_DIAGRAM):   quit;
22240      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22241      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
22242      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22243      /*; *"; *'; */
22244      ;
MPRINT(EM_DIAGRAM):   ;
22245      run;
MPRINT(EM_DIAGRAM):   run;
22246      quit;
MPRINT(EM_DIAGRAM):   quit;
22247      /* Reset EM Options */
22248      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
22249      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
22250      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
