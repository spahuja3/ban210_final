NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
16072      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16073      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16074      put '<Node Id="Ids" Event="Run" Pid="16172" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids" Event="Run" Pid="16172" Gridid=""/>';
16075      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-GPKLHDH,
      Local Host IP addr=fe80::9dee:e6f7:c9c5:74ad%16,
      Peer Hostname Name=DESKTOP-GPKLHDH,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52658,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 50.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

16076      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Ids : Beginning update before running 
* datetime : 16APR2022:02:26:26 
* 
*------------------------------------------------------------* 
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
MPRINT(EM_DIAGRAM):     filename _emtool_ 'D:\\127097210_Pahuja\Workspaces\EMWS1\Ids\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16078      %let _HPDMGRIDHOST=;
16079      %let _HPDMGRIDINSTALLLOC=;
16080      %let _HPDMGRIDDATASERVER=;
16081      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Ids : End update 
* datetime : 16APR2022:02:26:26 
* 
*------------------------------------------------------------* 
16082      %em_getactionstatus(emlib =EMWS1, nodeid=Ids);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16083      proc compare base=EMWS1.Ids_emtrainvariable compare=EMWS1.Ids_variableSet out=diffDS noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_GETACTIONSTATUS):   proc compare base=EMWS1.Ids_emtrainvariable compare=EMWS1.Ids_variableSet out=diffDS noprint outnoequal outbase outcomp outdiff;
16084      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 13 observations read from the data set EMWS1.IDS_EMTRAINVARIABLE.
NOTE: There were 13 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set WORK.DIFFDS has 0 observations and 8 variables.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

16085      %let diffVar = N;
16086      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
16087      set diffDs end=eof;
MPRINT(EM_GETACTIONSTATUS):   set diffDs end=eof;
16088      if eof and _N_>0 then call symput('diffVar', 'Y');
MPRINT(EM_GETACTIONSTATUS):   if eof and _N_>0 then call symput('diffVar', 'Y');
16089      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 0 observations read from the data set WORK.DIFFDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

16090      %let em_Train = N;
16091      %let em_Score = N;
16092      %let em_Report = N;
16093      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):    
MPRINT(EM_DIAGRAM):  ;

Node "Ids" has already run. 
Node "Ids" succeeded. 
16094      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16095      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16096      put '<Node Id="Ids" Event="Complete" Pid="16172" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids" Event="Complete" Pid="16172" Gridid=""/>';
16097      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-GPKLHDH,
      Local Host IP addr=fe80::9dee:e6f7:c9c5:74ad%16,
      Peer Hostname Name=DESKTOP-GPKLHDH,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52658,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "TREE" 
Traverser: WaitingNode "NEURAL" 
Traverser: WaitingNode "IMPT" 
Traverser: WaitingNode "MBR" 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
16098      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16099      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16100      put '<Node Id="Part" Event="Run" Pid="16172" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Run" Pid="16172" Gridid=""/>';
16101      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-GPKLHDH,
      Local Host IP addr=fe80::9dee:e6f7:c9c5:74ad%16,
      Peer Hostname Name=DESKTOP-GPKLHDH,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52658,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

16102      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part : Beginning update before running 
* datetime : 16APR2022:02:26:26 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\\127097210_Pahuja\Workspaces\EMWS1\Part\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16121      %let _HPDMGRIDHOST=;
16122      %let _HPDMGRIDINSTALLLOC=;
16123      %let _HPDMGRIDDATASERVER=;
16124      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part : End update 
* datetime : 16APR2022:02:26:27 
* 
*------------------------------------------------------------* 
16125      %em_getactionstatus(emlib =EMWS1, nodeid=Part);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16126      %let em_Train = N;
16127      %let em_Score = N;
16128      %let em_Report = N;
16129      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Part" has already run. 
Node "Part" succeeded. 
16130      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16131      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16132      put '<Node Id="Part" Event="Complete" Pid="16172" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part" Event="Complete" Pid="16172" Gridid=""/>';
16133      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-GPKLHDH,
      Local Host IP addr=fe80::9dee:e6f7:c9c5:74ad%16,
      Peer Hostname Name=DESKTOP-GPKLHDH,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52658,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

Traverser: WaitingNode "NEURAL" 
Traverser: WaitingNode "MBR" 
Traverser: WaitingNode "MDLCOMP" 
traverser_readyNode_note 
traverser_readyNode_note 
16134      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
16135      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
16136      put '<Node Id="Tree" Event="Run" Pid="16172" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree" Event="Run" Pid="16172" Gridid=""/>';
16137      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=DESKTOP-GPKLHDH,
      Local Host IP addr=fe80::9dee:e6f7:c9c5:74ad%16,
      Peer Hostname Name=DESKTOP-GPKLHDH,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=52658,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

16138      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree : Beginning update before running 
* datetime : 16APR2022:02:26:27 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
16169      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
16170      * Tree: Update Variables Set;
MPRINT(EM_DIAGRAM):   * Tree: Update Variables Set;
16171      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

16172      proc sort data=EMWS1.Part_CMeta_TRAIN out=_SortedVar;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Part_CMeta_TRAIN out=_SortedVar;
16173      by name;
MPRINT(EM_DIAGRAM):   by name;
16174      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14 observations read from the data set EMWS1.PART_CMETA_TRAIN.
NOTE: The data set WORK._SORTEDVAR has 14 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16175      proc sort data=EMWS1.Tree_VariableSet;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Tree_VariableSet;
16176      by name;
MPRINT(EM_DIAGRAM):   by name;
16177      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14 observations read from the data set EMWS1.TREE_VARIABLESET.
NOTE: The data set EMWS1.TREE_VARIABLESET has 14 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

16178      data EMWS1.Tree_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_VariableSet;
16179      merge _SortedVar(in=_a) EMWS1.Tree_VariableSet(in=_b rename=(ROLE = OLDROLE) keep=NAME ROLE USE REPORT);
MPRINT(EM_DIAGRAM):   merge _SortedVar(in=_a) EMWS1.Tree_VariableSet(in=_b rename=(ROLE = OLDROLE) keep=NAME ROLE USE REPORT);
16180      by name;
MPRINT(EM_DIAGRAM):   by name;
16181      if (OLDROLE = 'TARGET' and use = 'Y') and ROLE = 'REJECTED' then USE = 'D';
MPRINT(EM_DIAGRAM):   if (OLDROLE = 'TARGET' and use = 'Y') and ROLE = 'REJECTED' then USE = 'D';
16182      drop OLDROLE;
MPRINT(EM_DIAGRAM):   drop OLDROLE;
16183      if _b and ^_a then delete;
MPRINT(EM_DIAGRAM):   if _b and ^_a then delete;
16184      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 14 observations read from the data set WORK._SORTEDVAR.
NOTE: There were 14 observations read from the data set EMWS1.TREE_VARIABLESET.
NOTE: The data set EMWS1.TREE_VARIABLESET has 14 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

16185      * Tree: End of Update Variables Set;
MPRINT(EM_DIAGRAM):    * Tree: End of Update Variables Set;
16186      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify class(type=PROFIT label= class);
MPRINT(EM_DIAGRAM):   label DECISION1= "RECURRENCE-EVENTS";
MPRINT(EM_DIAGRAM):   label DECISION2= "NO-RECURRENCE-EVENTS";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = '127097210_Pahuja';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Decriptive';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.class;
MPRINT(EM_DECDATA):   length class $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
MPRINT(EM_DECDATA):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "RECURRENCE-EVENTS" DECISION2= "NO-RECURRENCE-EVENTS" ;
MPRINT(EM_DECDATA):   format COUNT 10. ;
MPRINT(EM_DECDATA):   class="RECURRENCE-EVENTS";
MPRINT(EM_DECDATA):   COUNT=85;
MPRINT(EM_DECDATA):   DATAPRIOR=0.2972027972;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.2972027972;
MPRINT(EM_DECDATA):   DECPRIOR=0.2972;
MPRINT(EM_DECDATA):   DECISION1=1;
MPRINT(EM_DECDATA):   DECISION2=0;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   class="NO-RECURRENCE-EVENTS";
MPRINT(EM_DECDATA):   COUNT=201;
MPRINT(EM_DECDATA):   DATAPRIOR=0.7027972028;
MPRINT(EM_DECDATA):   TRAINPRIOR=0.7027972028;
MPRINT(EM_DECDATA):   DECPRIOR=0.7028;
MPRINT(EM_DECDATA):   DECISION1=0;
MPRINT(EM_DECDATA):   DECISION2=1;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify class(type=PROFIT label= class);
MPRINT(EM_DECDATA):   label DECISION1= 'RECURRENCE-EVENTS';
MPRINT(EM_DECDATA):   label DECISION2= 'NO-RECURRENCE-EVENTS';
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify class(type=PROFIT label= class);
MPRINT(EM_DIAGRAM):   label DECISION1= "RECURRENCE-EVENTS";
MPRINT(EM_DIAGRAM):   label DECISION2= "NO-RECURRENCE-EVENTS";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
16567      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
16568      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
16569      TARGET="class";
MPRINT(EM_DIAGRAM):   TARGET="class";
16570      DECDATA="EMWS1.Ids_class_DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_class_DD";
16571      DECMETA="EMWS1.Ids_class_DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_class_DM";
16572      output;
MPRINT(EM_DIAGRAM):   output;
16573      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

16574      %let emexceptionString =;
16575      %let EMEXCEPTIONSTRING=;
16576      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16577      * UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree;
16578      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16579      %let EM_ACTION = UPDATE;
16580      %let syscc = 0;
16581      %macro main;
16582      
16583        %if %upcase(&EM_ACTION) = CREATE %then %do;
16584          filename temp catalog 'sashelp.emmodl.tree_create.source';
16585          %include temp;
16586          filename temp;
16587      
16588          %em_tree_create;
16589        %end;
16590      
16591         %else
16592         %if %upcase(&EM_ACTION) = TRAIN %then %do;
16593      
16594             filename temp catalog 'sashelp.emmodl.tree_train.source';
16595             %include temp;
16596             filename temp;
16597             %em_tree_train;
16598         %end;
16599      
16600        %else
16601        %if %upcase(&EM_ACTION) = SCORE %then %do;
16602          filename temp catalog 'sashelp.emmodl.tree_score.source';
16603          %include temp;
16604          filename temp;
16605      
16606          %em_tree_score;
16607      
16608        %end;
16609      
16610        %else
16611        %if %upcase(&EM_ACTION) = REPORT %then %do;
16612      
16613             filename temp catalog 'sashelp.emmodl.tree_report.source';
16614             %include temp;
16615             filename temp;
16616      
16617             %em_tree_report;
16618         %end;
16619      
16620        %else
16621        %if %upcase(&EM_ACTION) = OPENINT %then %do;
16622      
16623             filename temp catalog 'sashelp.emmodl.tree_actions.source';
16624             %include temp;
16625             filename temp;
16626             %EM_TREE_OPENTREEVIEWER;
16627      
16628         %end;
16629      
16630        %else
16631        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16632      
16633             filename temp catalog 'sashelp.emmodl.tree_actions.source';
16634             %include temp;
16635             filename temp;
16636             %EM_TREE_CLOSETREEVIEWER;
16637      
16638         %end;
16639      
16640      
16641         %doendm:
16642      %mend main;
16643      
16644      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
16645      
16646      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
16647      * End UPDATE: Tree;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree;
16648      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

16649      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'D:\\127097210_Pahuja\Workspaces\EMWS1\Tree\PROPERTIES.xml' encoding="UTF-8" NOBOM;
16651      %let _HPDMGRIDHOST=;
16652      %let _HPDMGRIDINSTALLLOC=;
16653      %let _HPDMGRIDDATASERVER=;
16654      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree : End update 
* datetime : 16APR2022:02:26:28 
* 
*------------------------------------------------------------* 
16655      %em_getactionstatus(emlib =EMWS1, nodeid=Tree);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

16656      %let em_Train = Y;
16657      %let em_Report = Y;
16658      %let em_Score = Y;
16659      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

16660      %let emloopmode =;
16661      %let emloopnumber =0;
16662      %let emloopId =Tree;
*------------------------------------------------------------* 
* 
* Tree : Running 
* datetime : 16APR2022:02:26:28 
* 
*------------------------------------------------------------* 
16663      %let SYSCC =0;
16664      %let EMGROUPMODE =;
16665      %let EMGROUPID =;
MPRINT(EM_DIAGRAM):      filename temp catalog 'sashelp.emutil.em_vardist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_classdist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checksetinit.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checkerror.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odsliston.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odslistoff.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_getvarname.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    filename L0HHY4VF "D:\\127097210_Pahuja\Workspaces\EMWS1\Tree\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto log=L0HHY4VF new;
MPRINT(EM_DIAGRAM):   run;
