MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 16, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "02:26:48 o'clock" 
);
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                April 16, 2022
Time:                02:26:48 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0SSU2FM 
"D:\\127097210_Pahuja\Workspaces\EMWS1\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0SSU2FM new;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of 
      this session.
41153      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
41154      set EMWS1.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_OUTKEY;
41155      if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
41156      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set EMWS1.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

41157      filename emflow "D:\\127097210_Pahuja\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"D:\\127097210_Pahuja\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41158      *------------------------------------------------------------*;
41159      * Neural: Scoring DATA data;
41160      *------------------------------------------------------------*;
41161      data EMWS1.Neural_TRAIN
41162      / view=EMWS1.Neural_TRAIN
41163      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_TRAIN / view=EMWS1.Neural_TRAIN ;
41164      set EMWS1.Impt_TRAIN
41165      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_TRAIN ;
41166      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      D:\\127097210_Pahuja\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
41167     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41168     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
41169     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41170     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
41171     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
41172     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
41173     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
41174     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
41175     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
41176     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
41177     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
41178     +LENGTH _WARN_ $4
41179     +      F_class  $ 20
41180     +      I_class  $ 20
41181     +      U_class  $ 20
41182     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_class $ 20 I_class $ 20 U_class $ 20 ;
41183     +      label S_AvgAge = 'Standard: AvgAge' ;
MPRINT(EM_DIAGRAM):   label S_AvgAge = 'Standard: AvgAge' ;
41184     +
41185     +      label S_AvgTumorSize = 'Standard: AvgTumorSize' ;
MPRINT(EM_DIAGRAM):   label S_AvgTumorSize = 'Standard: AvgTumorSize' ;
41186     +
41187     +      label S_Avginv_node_group = 'Standard: Avginv_node_group' ;
MPRINT(EM_DIAGRAM):   label S_Avginv_node_group = 'Standard: Avginv_node_group' ;
41188     +
41189     +      label S_deg_malig = 'Standard: deg_malig' ;
MPRINT(EM_DIAGRAM):   label S_deg_malig = 'Standard: deg_malig' ;
41190     +
41191     +      label IMP_node_capsno = 'Dummy: IMP_node_caps=no' ;
MPRINT(EM_DIAGRAM):   label IMP_node_capsno = 'Dummy: IMP_node_caps=no' ;
41192     +
41193     +      label breastleft = 'Dummy: breast=left' ;
MPRINT(EM_DIAGRAM):   label breastleft = 'Dummy: breast=left' ;
41194     +
41195     +      label irradiatno = 'Dummy: irradiat=no' ;
MPRINT(EM_DIAGRAM):   label irradiatno = 'Dummy: irradiat=no' ;
41196     +
41197     +      label age20_29 = 'Dummy: age=20-29' ;
MPRINT(EM_DIAGRAM):   label age20_29 = 'Dummy: age=20-29' ;
41198     +
41199     +      label age30_39 = 'Dummy: age=30-39' ;
MPRINT(EM_DIAGRAM):   label age30_39 = 'Dummy: age=30-39' ;
41200     +
41201     +      label age40_49 = 'Dummy: age=40-49' ;
MPRINT(EM_DIAGRAM):   label age40_49 = 'Dummy: age=40-49' ;
41202     +
41203     +      label age50_59 = 'Dummy: age=50-59' ;
MPRINT(EM_DIAGRAM):   label age50_59 = 'Dummy: age=50-59' ;
41204     +
41205     +      label age60_69 = 'Dummy: age=60-69' ;
MPRINT(EM_DIAGRAM):   label age60_69 = 'Dummy: age=60-69' ;
41206     +
41207     +      label breast_quadcentral = 'Dummy: breast_quad=central' ;
MPRINT(EM_DIAGRAM):   label breast_quadcentral = 'Dummy: breast_quad=central' ;
41208     +
41209     +      label breast_quadleft_low = 'Dummy: breast_quad=left_low' ;
MPRINT(EM_DIAGRAM):   label breast_quadleft_low = 'Dummy: breast_quad=left_low' ;
41210     +
41211     +      label breast_quadleft_up = 'Dummy: breast_quad=left_up' ;
MPRINT(EM_DIAGRAM):   label breast_quadleft_up = 'Dummy: breast_quad=left_up' ;
41212     +
41213     +      label breast_quadright_low = 'Dummy: breast_quad=right_low' ;
MPRINT(EM_DIAGRAM):   label breast_quadright_low = 'Dummy: breast_quad=right_low' ;
41214     +
41215     +      label inv_nodes0_2 = 'Dummy: inv_nodes=0-2' ;
MPRINT(EM_DIAGRAM):   label inv_nodes0_2 = 'Dummy: inv_nodes=0-2' ;
41216     +
41217     +      label inv_nodes12_14 = 'Dummy: inv_nodes=12-14' ;
MPRINT(EM_DIAGRAM):   label inv_nodes12_14 = 'Dummy: inv_nodes=12-14' ;
41218     +
41219     +      label inv_nodes15_17 = 'Dummy: inv_nodes=15-17' ;
MPRINT(EM_DIAGRAM):   label inv_nodes15_17 = 'Dummy: inv_nodes=15-17' ;
41220     +
41221     +      label inv_nodes24_26 = 'Dummy: inv_nodes=24-26' ;
MPRINT(EM_DIAGRAM):   label inv_nodes24_26 = 'Dummy: inv_nodes=24-26' ;
41222     +
41223     +      label inv_nodes3_5 = 'Dummy: inv_nodes=3-5' ;
MPRINT(EM_DIAGRAM):   label inv_nodes3_5 = 'Dummy: inv_nodes=3-5' ;
41224     +
41225     +      label inv_nodes6_8 = 'Dummy: inv_nodes=6-8' ;
MPRINT(EM_DIAGRAM):   label inv_nodes6_8 = 'Dummy: inv_nodes=6-8' ;
41226     +
41227     +      label menopausege40 = 'Dummy: menopause=ge40' ;
MPRINT(EM_DIAGRAM):   label menopausege40 = 'Dummy: menopause=ge40' ;
41228     +
41229     +      label menopauselt40 = 'Dummy: menopause=lt40' ;
MPRINT(EM_DIAGRAM):   label menopauselt40 = 'Dummy: menopause=lt40' ;
41230     +
41231     +      label tumor_size0_4 = 'Dummy: tumor_size=0-4' ;
MPRINT(EM_DIAGRAM):   label tumor_size0_4 = 'Dummy: tumor_size=0-4' ;
41232     +
41233     +      label tumor_size10_14 = 'Dummy: tumor_size=10-14' ;
MPRINT(EM_DIAGRAM):   label tumor_size10_14 = 'Dummy: tumor_size=10-14' ;
41234     +
41235     +      label tumor_size15_19 = 'Dummy: tumor_size=15-19' ;
MPRINT(EM_DIAGRAM):   label tumor_size15_19 = 'Dummy: tumor_size=15-19' ;
41236     +
41237     +      label tumor_size20_24 = 'Dummy: tumor_size=20-24' ;
MPRINT(EM_DIAGRAM):   label tumor_size20_24 = 'Dummy: tumor_size=20-24' ;
41238     +
41239     +      label tumor_size25_29 = 'Dummy: tumor_size=25-29' ;
MPRINT(EM_DIAGRAM):   label tumor_size25_29 = 'Dummy: tumor_size=25-29' ;
41240     +
41241     +      label tumor_size30_34 = 'Dummy: tumor_size=30-34' ;
MPRINT(EM_DIAGRAM):   label tumor_size30_34 = 'Dummy: tumor_size=30-34' ;
41242     +
41243     +      label tumor_size35_39 = 'Dummy: tumor_size=35-39' ;
MPRINT(EM_DIAGRAM):   label tumor_size35_39 = 'Dummy: tumor_size=35-39' ;
41244     +
41245     +      label tumor_size40_44 = 'Dummy: tumor_size=40-44' ;
MPRINT(EM_DIAGRAM):   label tumor_size40_44 = 'Dummy: tumor_size=40-44' ;
41246     +
41247     +      label tumor_size45_49 = 'Dummy: tumor_size=45-49' ;
MPRINT(EM_DIAGRAM):   label tumor_size45_49 = 'Dummy: tumor_size=45-49' ;
41248     +
41249     +      label tumor_size5_9 = 'Dummy: tumor_size=5-9' ;
MPRINT(EM_DIAGRAM):   label tumor_size5_9 = 'Dummy: tumor_size=5-9' ;
41250     +
41251     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
41252     +
41253     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
41254     +
41255     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
41256     +
41257     +      label I_class = 'Into: class' ;
MPRINT(EM_DIAGRAM):   label I_class = 'Into: class' ;
41258     +
41259     +      label F_class = 'From: class' ;
MPRINT(EM_DIAGRAM):   label F_class = 'From: class' ;
41260     +
41261     +      label U_class = 'Unnormalized Into: class' ;
MPRINT(EM_DIAGRAM):   label U_class = 'Unnormalized Into: class' ;
41262     +
41263     +      label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
41264     +
41265     +      label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
41266     +
41267     +      label P_classno_recurrence_events =
41268     +'Predicted: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_classno_recurrence_events = 'Predicted: 
class=no-recurrence-events' ;
41269     +
41270     +      label R_classno_recurrence_events =
41271     +'Residual: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_classno_recurrence_events = 'Residual: 
class=no-recurrence-events' ;
41272     +
41273     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
41274     +
41275     +*** Generate dummy variables for IMP_node_caps ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_node_caps ;
41276     +drop IMP_node_capsno ;
MPRINT(EM_DIAGRAM):   drop IMP_node_capsno ;
41277     +if missing( IMP_node_caps ) then do;
MPRINT(EM_DIAGRAM):   if missing( IMP_node_caps ) then do;
41278     +   IMP_node_capsno = .;
MPRINT(EM_DIAGRAM):   IMP_node_capsno = .;
41279     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41280     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41281     +end;
MPRINT(EM_DIAGRAM):   end;
41282     +else do;
MPRINT(EM_DIAGRAM):   else do;
41283     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
41284     +   _dm3 = put( IMP_node_caps , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( IMP_node_caps , $3. );
41285     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
MPRINT(EM_DIAGRAM):   IMP_node_capsno = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
41286     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   IMP_node_capsno = -1;
41287     +      IMP_node_capsno = 1;
MPRINT(EM_DIAGRAM):   end;
41288     +   end;
41289     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   IMP_node_capsno = .;
41290     +      IMP_node_capsno = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41291     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41292     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41293     +      IMP_node_capsno = .;
41294     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast ;
41295     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop breastleft ;
41296     +   end;
MPRINT(EM_DIAGRAM):   if missing( breast ) then do;
41297     +end;
MPRINT(EM_DIAGRAM):   breastleft = .;
41298     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41299     +*** Generate dummy variables for breast ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41300     +drop breastleft ;
MPRINT(EM_DIAGRAM):   end;
41301     +if missing( breast ) then do;
41302     +   breastleft = .;
MPRINT(EM_DIAGRAM):   else do;
41303     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
41304     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
41305     +end;
MPRINT(EM_DIAGRAM):   _dm5 = put( breast , $5. );
41306     +else do;
41307     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMIP):   call dmnorm(_dm5,
41308     +   _dm5 = put( breast , $5. );
41309     +   %DMNORMIP( _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm5 = 'LEFT' then do;
MPRINT(EM_DIAGRAM):   breastleft = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'RIGHT' then do;
41310     +   if _dm5 = 'LEFT'  then do;
MPRINT(EM_DIAGRAM):   breastleft = -1;
41311     +      breastleft = 1;
MPRINT(EM_DIAGRAM):   end;
41312     +   end;
41313     +   else if _dm5 = 'RIGHT'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   breastleft = .;
41314     +      breastleft = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41315     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41316     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41317     +      breastleft = .;
41318     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for irradiat ;
41319     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop irradiatno ;
41320     +   end;
MPRINT(EM_DIAGRAM):   if missing( irradiat ) then do;
41321     +end;
MPRINT(EM_DIAGRAM):   irradiatno = .;
41322     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41323     +*** Generate dummy variables for irradiat ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41324     +drop irradiatno ;
MPRINT(EM_DIAGRAM):   end;
41325     +if missing( irradiat ) then do;
41326     +   irradiatno = .;
MPRINT(EM_DIAGRAM):   else do;
41327     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
41328     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
41329     +end;
MPRINT(EM_DIAGRAM):   _dm3 = put( irradiat , $3. );
41330     +else do;
41331     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMIP):   call dmnorm(_dm3,
41332     +   _dm3 = put( irradiat , $3. );
41333     +   %DMNORMIP( _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
MPRINT(EM_DIAGRAM):   irradiatno = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
41334     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   irradiatno = -1;
41335     +      irradiatno = 1;
MPRINT(EM_DIAGRAM):   end;
41336     +   end;
41337     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   irradiatno = .;
41338     +      irradiatno = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41339     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41340     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41341     +      irradiatno = .;
41342     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for age ;
41343     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop age20_29 age30_39 age40_49 age50_59 age60_69 ;
41344     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
41345     +end;
MPRINT(EM_DIAGRAM):   age20_29 = 0;
41346     +
MPRINT(EM_DIAGRAM):   age30_39 = 0;
41347     +*** Generate dummy variables for age ;
MPRINT(EM_DIAGRAM):   age40_49 = 0;
41348     +drop age20_29 age30_39 age40_49 age50_59 age60_69 ;
MPRINT(EM_DIAGRAM):   age50_59 = 0;
41349     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   age60_69 = 0;
41350     +age20_29 = 0;
MPRINT(EM_DIAGRAM):   if missing( age ) then do;
41351     +age30_39 = 0;
MPRINT(EM_DIAGRAM):   age20_29 = .;
41352     +age40_49 = 0;
MPRINT(EM_DIAGRAM):   age30_39 = .;
41353     +age50_59 = 0;
MPRINT(EM_DIAGRAM):   age40_49 = .;
41354     +age60_69 = 0;
MPRINT(EM_DIAGRAM):   age50_59 = .;
41355     +if missing( age ) then do;
MPRINT(EM_DIAGRAM):   age60_69 = .;
41356     +   age20_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41357     +   age30_39 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41358     +   age40_49 = .;
MPRINT(EM_DIAGRAM):   end;
41359     +   age50_59 = .;
41360     +   age60_69 = .;
MPRINT(EM_DIAGRAM):   else do;
41361     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
41362     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
41363     +end;
MPRINT(EM_DIAGRAM):   _dm5 = put( age , $5. );
41364     +else do;
41365     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMIP):   call dmnorm(_dm5,
41366     +   _dm5 = put( age , $5. );
41367     +   %DMNORMIP( _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-49' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-39' then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-29' then do;
MPRINT(EM_DIAGRAM):   age20_29 = 1;
41368     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41369     +   if _dm5 <= '40-49'  then do;
MPRINT(EM_DIAGRAM):   end;
41370     +      if _dm5 <= '30-39'  then do;
41371     +         if _dm5 = '20-29'  then do;
MPRINT(EM_DIAGRAM):   else do;
41372     +            age20_29 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-39' then do;
41373     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   age30_39 = 1;
41374     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41375     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41376     +            if _dm5 = '30-39'  then do;
MPRINT(EM_DIAGRAM):   end;
41377     +               age30_39 = 1;
41378     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41379     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-49' then do;
41380     +         end;
MPRINT(EM_DIAGRAM):   age40_49 = 1;
41381     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41382     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41383     +         if _dm5 = '40-49'  then do;
MPRINT(EM_DIAGRAM):   end;
41384     +            age40_49 = 1;
41385     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41386     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '60-69' then do;
41387     +      end;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-59' then do;
41388     +   end;
MPRINT(EM_DIAGRAM):   age50_59 = 1;
41389     +   else do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
41390     +      if _dm5 <= '60-69'  then do;
41391     +         if _dm5 = '50-59'  then do;
MPRINT(EM_DIAGRAM):   else do;
41392     +            age50_59 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '60-69' then do;
41393     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   age60_69 = 1;
41394     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41395     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41396     +            if _dm5 = '60-69'  then do;
MPRINT(EM_DIAGRAM):   end;
41397     +               age60_69 = 1;
41398     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41399     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 = '70-79' then do;
41400     +         end;
MPRINT(EM_DIAGRAM):   age20_29 = -1;
41401     +      end;
MPRINT(EM_DIAGRAM):   age30_39 = -1;
41402     +      else do;
MPRINT(EM_DIAGRAM):   age40_49 = -1;
MPRINT(EM_DIAGRAM):   age50_59 = -1;
41403     +         if _dm5 = '70-79'  then do;
MPRINT(EM_DIAGRAM):   age60_69 = -1;
41404     +            age20_29 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41405     +            age30_39 = -1;
MPRINT(EM_DIAGRAM):   end;
41406     +            age40_49 = -1;
MPRINT(EM_DIAGRAM):   end;
41407     +            age50_59 = -1;
MPRINT(EM_DIAGRAM):   end;
41408     +            age60_69 = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
41409     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   age20_29 = .;
41410     +         end;
MPRINT(EM_DIAGRAM):   age30_39 = .;
41411     +      end;
MPRINT(EM_DIAGRAM):   age40_49 = .;
41412     +   end;
MPRINT(EM_DIAGRAM):   age50_59 = .;
41413     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   age60_69 = .;
41414     +      age20_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41415     +      age30_39 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41416     +      age40_49 = .;
MPRINT(EM_DIAGRAM):   end;
41417     +      age50_59 = .;
MPRINT(EM_DIAGRAM):   end;
41418     +      age60_69 = .;
41419     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast_quad ;
41420     +      _DM_BAD = 1;
41421     +   end;
MPRINT(EM_DIAGRAM):   drop breast_quadcentral breast_quadleft_low breast_quadleft_up 
breast_quadright_low ;
41422     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
41423     +
MPRINT(EM_DIAGRAM):   breast_quadcentral = 0;
41424     +*** Generate dummy variables for breast_quad ;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = 0;
41425     +drop breast_quadcentral breast_quadleft_low breast_quadleft_up
MPRINT(EM_DIAGRAM):   breast_quadleft_up = 0;
41426     +        breast_quadright_low ;
MPRINT(EM_DIAGRAM):   breast_quadright_low = 0;
41427     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( breast_quad ) then do;
41428     +breast_quadcentral = 0;
MPRINT(EM_DIAGRAM):   breast_quadcentral = .;
41429     +breast_quadleft_low = 0;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = .;
41430     +breast_quadleft_up = 0;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = .;
41431     +breast_quadright_low = 0;
MPRINT(EM_DIAGRAM):   breast_quadright_low = .;
41432     +if missing( breast_quad ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41433     +   breast_quadcentral = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41434     +   breast_quadleft_low = .;
MPRINT(EM_DIAGRAM):   end;
41435     +   breast_quadleft_up = .;
41436     +   breast_quadright_low = .;
MPRINT(EM_DIAGRAM):   else do;
41437     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm9 $ 9;
41438     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm9 ;
41439     +end;
MPRINT(EM_DIAGRAM):   _dm9 = put( breast_quad , $9. );
41440     +else do;
41441     +   length _dm9 $ 9; drop _dm9 ;
MPRINT(DMNORMIP):   call dmnorm(_dm9,
41442     +   _dm9 = put( breast_quad , $9. );
41443     +   %DMNORMIP( _dm9 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm9 = 'LEFT_UP' then do;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'LEFT_LOW' then do;
41444     +   if _dm9 = 'LEFT_UP'  then do;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = 1;
41445     +      breast_quadleft_up = 1;
MPRINT(EM_DIAGRAM):   end;
41446     +   end;
41447     +   else if _dm9 = 'LEFT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_UP' then do;
MPRINT(EM_DIAGRAM):   breast_quadcentral = -1;
41448     +      breast_quadleft_low = 1;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = -1;
41449     +   end;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = -1;
41450     +   else if _dm9 = 'RIGHT_UP'  then do;
MPRINT(EM_DIAGRAM):   breast_quadright_low = -1;
MPRINT(EM_DIAGRAM):   end;
41451     +      breast_quadcentral = -1;
41452     +      breast_quadleft_low = -1;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'CENTRAL' then do;
41453     +      breast_quadleft_up = -1;
MPRINT(EM_DIAGRAM):   breast_quadcentral = 1;
41454     +      breast_quadright_low = -1;
MPRINT(EM_DIAGRAM):   end;
41455     +   end;
41456     +   else if _dm9 = 'CENTRAL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_LOW' then do;
MPRINT(EM_DIAGRAM):   breast_quadright_low = 1;
41457     +      breast_quadcentral = 1;
MPRINT(EM_DIAGRAM):   end;
41458     +   end;
41459     +   else if _dm9 = 'RIGHT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   breast_quadcentral = .;
41460     +      breast_quadright_low = 1;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = .;
41461     +   end;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = .;
41462     +   else do;
MPRINT(EM_DIAGRAM):   breast_quadright_low = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41463     +      breast_quadcentral = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41464     +      breast_quadleft_low = .;
MPRINT(EM_DIAGRAM):   end;
41465     +      breast_quadleft_up = .;
MPRINT(EM_DIAGRAM):   end;
41466     +      breast_quadright_low = .;
41467     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for inv_nodes ;
41468     +      _DM_BAD = 1;
41469     +   end;
MPRINT(EM_DIAGRAM):   drop inv_nodes0_2 inv_nodes12_14 inv_nodes15_17 inv_nodes24_26 
inv_nodes3_5 inv_nodes6_8 ;
41470     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
41471     +
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = 0;
41472     +*** Generate dummy variables for inv_nodes ;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = 0;
41473     +drop inv_nodes0_2 inv_nodes12_14 inv_nodes15_17 inv_nodes24_26 inv_nodes3_5
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = 0;
41474     +        inv_nodes6_8 ;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = 0;
41475     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = 0;
41476     +inv_nodes0_2 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = 0;
41477     +inv_nodes12_14 = 0;
MPRINT(EM_DIAGRAM):   if missing( inv_nodes ) then do;
41478     +inv_nodes15_17 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = .;
41479     +inv_nodes24_26 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = .;
41480     +inv_nodes3_5 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = .;
41481     +inv_nodes6_8 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = .;
41482     +if missing( inv_nodes ) then do;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = .;
41483     +   inv_nodes0_2 = .;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = .;
41484     +   inv_nodes12_14 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41485     +   inv_nodes15_17 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41486     +   inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   end;
41487     +   inv_nodes3_5 = .;
41488     +   inv_nodes6_8 = .;
MPRINT(EM_DIAGRAM):   else do;
41489     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
41490     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
41491     +end;
MPRINT(EM_DIAGRAM):   _dm5 = put( inv_nodes , $5. );
41492     +else do;
41493     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMIP):   call dmnorm(_dm5,
41494     +   _dm5 = put( inv_nodes , $5. );
41495     +   %DMNORMIP( _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm5 = '0-2' then do;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm5 = '3-5' then do;
41496     +   if _dm5 = '0-2'  then do;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = 1;
41497     +      inv_nodes0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
41498     +   end;
41499     +   else if _dm5 = '3-5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '6-8' then do;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = 1;
41500     +      inv_nodes3_5 = 1;
MPRINT(EM_DIAGRAM):   end;
41501     +   end;
41502     +   else if _dm5 = '6-8'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '9-11' then do;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = -1;
41503     +      inv_nodes6_8 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = -1;
41504     +   end;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = -1;
41505     +   else if _dm5 = '9-11'  then do;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = -1;
41506     +      inv_nodes0_2 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = -1;
41507     +      inv_nodes12_14 = -1;
MPRINT(EM_DIAGRAM):   end;
41508     +      inv_nodes15_17 = -1;
41509     +      inv_nodes24_26 = -1;
MPRINT(EM_DIAGRAM):   else if _dm5 = '15-17' then do;
41510     +      inv_nodes3_5 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = 1;
41511     +      inv_nodes6_8 = -1;
MPRINT(EM_DIAGRAM):   end;
41512     +   end;
41513     +   else if _dm5 = '15-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '12-14' then do;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = 1;
41514     +      inv_nodes15_17 = 1;
MPRINT(EM_DIAGRAM):   end;
41515     +   end;
41516     +   else if _dm5 = '12-14'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '24-26' then do;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = 1;
41517     +      inv_nodes12_14 = 1;
MPRINT(EM_DIAGRAM):   end;
41518     +   end;
41519     +   else if _dm5 = '24-26'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = .;
41520     +      inv_nodes24_26 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = .;
41521     +   end;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = .;
41522     +   else do;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = .;
41523     +      inv_nodes0_2 = .;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = .;
41524     +      inv_nodes12_14 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41525     +      inv_nodes15_17 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41526     +      inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   end;
41527     +      inv_nodes3_5 = .;
MPRINT(EM_DIAGRAM):   end;
41528     +      inv_nodes6_8 = .;
41529     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for menopause ;
41530     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop menopausege40 menopauselt40 ;
41531     +   end;
MPRINT(EM_DIAGRAM):   if missing( menopause ) then do;
41532     +end;
MPRINT(EM_DIAGRAM):   menopausege40 = .;
41533     +
MPRINT(EM_DIAGRAM):   menopauselt40 = .;
41534     +*** Generate dummy variables for menopause ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41535     +drop menopausege40 menopauselt40 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41536     +if missing( menopause ) then do;
MPRINT(EM_DIAGRAM):   end;
41537     +   menopausege40 = .;
41538     +   menopauselt40 = .;
MPRINT(EM_DIAGRAM):   else do;
41539     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm7 $ 7;
41540     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm7 ;
41541     +end;
MPRINT(EM_DIAGRAM):   _dm7 = put( menopause , $7. );
41542     +else do;
41543     +   length _dm7 $ 7; drop _dm7 ;
MPRINT(DMNORMIP):   call dmnorm(_dm7,
41544     +   _dm7 = put( menopause , $7. );
41545     +   %DMNORMIP( _dm7 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm7 = 'PREMENO' then do;
MPRINT(EM_DIAGRAM):   menopausege40 = -1;
MPRINT(EM_DIAGRAM):   menopauselt40 = -1;
MPRINT(EM_DIAGRAM):   end;
41546     +   if _dm7 = 'PREMENO'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'GE40' then do;
41547     +      menopausege40 = -1;
MPRINT(EM_DIAGRAM):   menopausege40 = 1;
41548     +      menopauselt40 = -1;
MPRINT(EM_DIAGRAM):   menopauselt40 = 0;
41549     +   end;
MPRINT(EM_DIAGRAM):   end;
41550     +   else if _dm7 = 'GE40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'LT40' then do;
41551     +      menopausege40 = 1;
MPRINT(EM_DIAGRAM):   menopausege40 = 0;
41552     +      menopauselt40 = 0;
MPRINT(EM_DIAGRAM):   menopauselt40 = 1;
41553     +   end;
MPRINT(EM_DIAGRAM):   end;
41554     +   else if _dm7 = 'LT40'  then do;
MPRINT(EM_DIAGRAM):   else do;
41555     +      menopausege40 = 0;
MPRINT(EM_DIAGRAM):   menopausege40 = .;
41556     +      menopauselt40 = 1;
MPRINT(EM_DIAGRAM):   menopauselt40 = .;
41557     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41558     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
41559     +      menopausege40 = .;
MPRINT(EM_DIAGRAM):   end;
41560     +      menopauselt40 = .;
41561     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for tumor_size ;
41562     +      _DM_BAD = 1;
41563     +   end;
41564     +end;
MPRINT(EM_DIAGRAM):   drop tumor_size0_4 tumor_size10_14 tumor_size15_19 tumor_size20_24 
tumor_size25_29 tumor_size30_34 tumor_size35_39 tumor_size40_44 tumor_size45_49 tumor_size5_9 ;
41565     +
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
41566     +*** Generate dummy variables for tumor_size ;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = 0;
41567     +drop tumor_size0_4 tumor_size10_14 tumor_size15_19 tumor_size20_24
MPRINT(EM_DIAGRAM):   tumor_size10_14 = 0;
41568     +        tumor_size25_29 tumor_size30_34 tumor_size35_39 tumor_size40_44
MPRINT(EM_DIAGRAM):   tumor_size15_19 = 0;
41569     +        tumor_size45_49 tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = 0;
41570     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = 0;
41571     +tumor_size0_4 = 0;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = 0;
41572     +tumor_size10_14 = 0;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = 0;
41573     +tumor_size15_19 = 0;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = 0;
41574     +tumor_size20_24 = 0;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = 0;
41575     +tumor_size25_29 = 0;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = 0;
41576     +tumor_size30_34 = 0;
MPRINT(EM_DIAGRAM):   if missing( tumor_size ) then do;
41577     +tumor_size35_39 = 0;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = .;
41578     +tumor_size40_44 = 0;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = .;
41579     +tumor_size45_49 = 0;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = .;
41580     +tumor_size5_9 = 0;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = .;
41581     +if missing( tumor_size ) then do;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = .;
41582     +   tumor_size0_4 = .;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = .;
41583     +   tumor_size10_14 = .;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = .;
41584     +   tumor_size15_19 = .;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = .;
41585     +   tumor_size20_24 = .;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = .;
41586     +   tumor_size25_29 = .;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = .;
41587     +   tumor_size30_34 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41588     +   tumor_size35_39 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41589     +   tumor_size40_44 = .;
MPRINT(EM_DIAGRAM):   end;
41590     +   tumor_size45_49 = .;
41591     +   tumor_size5_9 = .;
MPRINT(EM_DIAGRAM):   else do;
41592     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
41593     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
41594     +end;
MPRINT(EM_DIAGRAM):   _dm5 = put( tumor_size , $5. );
41595     +else do;
41596     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMIP):   call dmnorm(_dm5,
41597     +   _dm5 = put( tumor_size , $5. );
41598     +   %DMNORMIP( _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-34' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '15-19' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '10-14' then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-4' then do;
41599     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = 1;
41600     +   if _dm5 <= '30-34'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41601     +      if _dm5 <= '15-19'  then do;
MPRINT(EM_DIAGRAM):   end;
41602     +         if _dm5 <= '10-14'  then do;
41603     +            if _dm5 = '0-4'  then do;
MPRINT(EM_DIAGRAM):   else do;
41604     +               tumor_size0_4 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '10-14' then do;
41605     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = 1;
41606     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41607     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41608     +               if _dm5 = '10-14'  then do;
MPRINT(EM_DIAGRAM):   end;
41609     +                  tumor_size10_14 = 1;
41610     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41611     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '15-19' then do;
41612     +            end;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = 1;
41613     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41614     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41615     +            if _dm5 = '15-19'  then do;
MPRINT(EM_DIAGRAM):   end;
41616     +               tumor_size15_19 = 1;
41617     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41618     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '25-29' then do;
41619     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-24' then do;
41620     +      end;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = 1;
41621     +      else do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
41622     +         if _dm5 <= '25-29'  then do;
41623     +            if _dm5 = '20-24'  then do;
MPRINT(EM_DIAGRAM):   else do;
41624     +               tumor_size20_24 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '25-29' then do;
41625     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = 1;
41626     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41627     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41628     +               if _dm5 = '25-29'  then do;
MPRINT(EM_DIAGRAM):   end;
41629     +                  tumor_size25_29 = 1;
41630     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41631     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-34' then do;
41632     +            end;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = 1;
41633     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41634     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41635     +            if _dm5 = '30-34'  then do;
MPRINT(EM_DIAGRAM):   end;
41636     +               tumor_size30_34 = 1;
MPRINT(EM_DIAGRAM):   end;
41637     +               _dm_find = 1;
41638     +            end;
MPRINT(EM_DIAGRAM):   else do;
41639     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '45-49' then do;
41640     +      end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-44' then do;
41641     +   end;
MPRINT(EM_DIAGRAM):   if _dm5 = '35-39' then do;
41642     +   else do;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41643     +      if _dm5 <= '45-49'  then do;
MPRINT(EM_DIAGRAM):   end;
41644     +         if _dm5 <= '40-44'  then do;
41645     +            if _dm5 = '35-39'  then do;
MPRINT(EM_DIAGRAM):   else do;
41646     +               tumor_size35_39 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-44' then do;
41647     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = 1;
41648     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41649     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41650     +               if _dm5 = '40-44'  then do;
MPRINT(EM_DIAGRAM):   end;
41651     +                  tumor_size40_44 = 1;
41652     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41653     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '45-49' then do;
41654     +            end;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = 1;
41655     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41656     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
41657     +            if _dm5 = '45-49'  then do;
MPRINT(EM_DIAGRAM):   end;
41658     +               tumor_size45_49 = 1;
41659     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
41660     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 = '5-9' then do;
41661     +         end;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = 1;
41662     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41663     +      else do;
MPRINT(EM_DIAGRAM):   end;
41664     +         if _dm5 = '5-9'  then do;
MPRINT(EM_DIAGRAM):   else do;
41665     +            tumor_size5_9 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-54' then do;
41666     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = -1;
41667     +         end;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = -1;
41668     +         else do;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = -1;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = -1;
41669     +            if _dm5 = '50-54'  then do;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = -1;
41670     +               tumor_size0_4 = -1;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = -1;
41671     +               tumor_size10_14 = -1;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = -1;
41672     +               tumor_size15_19 = -1;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = -1;
41673     +               tumor_size20_24 = -1;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = -1;
41674     +               tumor_size25_29 = -1;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = -1;
41675     +               tumor_size30_34 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41676     +               tumor_size35_39 = -1;
MPRINT(EM_DIAGRAM):   end;
41677     +               tumor_size40_44 = -1;
MPRINT(EM_DIAGRAM):   end;
41678     +               tumor_size45_49 = -1;
MPRINT(EM_DIAGRAM):   end;
41679     +               tumor_size5_9 = -1;
MPRINT(EM_DIAGRAM):   end;
41680     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
41681     +            end;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = .;
41682     +         end;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = .;
41683     +      end;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = .;
41684     +   end;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = .;
41685     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = .;
41686     +      tumor_size0_4 = .;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = .;
41687     +      tumor_size10_14 = .;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = .;
41688     +      tumor_size15_19 = .;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = .;
41689     +      tumor_size20_24 = .;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = .;
41690     +      tumor_size25_29 = .;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = .;
41691     +      tumor_size30_34 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41692     +      tumor_size35_39 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41693     +      tumor_size40_44 = .;
MPRINT(EM_DIAGRAM):   end;
41694     +      tumor_size45_49 = .;
MPRINT(EM_DIAGRAM):   end;
41695     +      tumor_size5_9 = .;
41696     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
41697     +      _DM_BAD = 1;
41698     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
41699     +end;
41700     +
41701     +*** *************************;
41702     +*** Checking missing input Interval
41703     +*** *************************;
41704     +
MPRINT(EM_DIAGRAM):   IF NMISS( AvgAge , AvgTumorSize , Avginv_node_group , deg_malig ) THEN 
DO;
41705     +IF NMISS(
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
41706     +   AvgAge ,
41707     +   AvgTumorSize ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41708     +   Avginv_node_group ,
MPRINT(EM_DIAGRAM):   END;
The SAS System

41709     +   deg_malig   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
41710     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
41711     +
MPRINT(EM_DIAGRAM):   *** *************************;
41712     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
41713     +END;
MPRINT(EM_DIAGRAM):   S_AvgAge = -5.17542134396122 + 0.10002730056017 * AvgAge ;
41714     +*** *************************;
41715     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   S_AvgTumorSize = -2.52494540353916 + 0.09506760766352 * AvgTumorSize ;
41716     +*** *************************;
41717     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Avginv_node_group = -0.69351787747727 + 0.31173971918285 * 
Avginv_node_group ;
41718     +   S_AvgAge  =    -5.17542134396122 +     0.10002730056017 * AvgAge ;
MPRINT(EM_DIAGRAM):   S_deg_malig = -2.75629070254781 + 1.34265662978187 * deg_malig ;
41719     +   S_AvgTumorSize  =    -2.52494540353916 +     0.09506760766352 *
MPRINT(EM_DIAGRAM):   END;
41720     +        AvgTumorSize ;
41721     +   S_Avginv_node_group  =    -0.69351787747727 +     0.31173971918285 *
MPRINT(EM_DIAGRAM):   ELSE DO;
41722     +        Avginv_node_group ;
MPRINT(EM_DIAGRAM):   IF MISSING( AvgAge ) THEN S_AvgAge = . ;
41723     +   S_deg_malig  =    -2.75629070254781 +     1.34265662978187 * deg_malig ;
41724     +END;
MPRINT(EM_DIAGRAM):   ELSE S_AvgAge = -5.17542134396122 + 0.10002730056017 * AvgAge ;
41725     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( AvgTumorSize ) THEN S_AvgTumorSize = . ;
41726     +   IF MISSING( AvgAge ) THEN S_AvgAge  = . ;
41727     +   ELSE S_AvgAge  =    -5.17542134396122 +     0.10002730056017 * AvgAge ;
MPRINT(EM_DIAGRAM):   ELSE S_AvgTumorSize = -2.52494540353916 + 0.09506760766352 * 
AvgTumorSize ;
MPRINT(EM_DIAGRAM):   IF MISSING( Avginv_node_group ) THEN S_Avginv_node_group = . ;
41728     +   IF MISSING( AvgTumorSize ) THEN S_AvgTumorSize  = . ;
41729     +   ELSE S_AvgTumorSize  =    -2.52494540353916 +     0.09506760766352 *
MPRINT(EM_DIAGRAM):   ELSE S_Avginv_node_group = -0.69351787747727 + 0.31173971918285 * 
Avginv_node_group ;
41730     +        AvgTumorSize ;
MPRINT(EM_DIAGRAM):   IF MISSING( deg_malig ) THEN S_deg_malig = . ;
41731     +   IF MISSING( Avginv_node_group ) THEN S_Avginv_node_group  = . ;
41732     +   ELSE S_Avginv_node_group  =    -0.69351787747727 +     0.31173971918285 *
MPRINT(EM_DIAGRAM):   ELSE S_deg_malig = -2.75629070254781 + 1.34265662978187 * deg_malig ;
41733     +        Avginv_node_group ;
MPRINT(EM_DIAGRAM):   END;
41734     +   IF MISSING( deg_malig ) THEN S_deg_malig  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
41735     +   ELSE S_deg_malig  =    -2.75629070254781 +     1.34265662978187 * deg_malig
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
41736     +         ;
MPRINT(EM_DIAGRAM):   *** *************************;
41737     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
41738     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41739     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
41740     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
41741     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41742     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
41743     +*** *************************;
41744     +*** *************************;
41745     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   H11 = -0.61497493528093 * S_AvgAge + 0.95387181547091 * S_AvgTumorSize + 
-0.07696387186429 * S_Avginv_node_group + -0.37968136001267 * S_deg_malig ;
41746     +*** *************************;
41747     +IF _DM_BAD EQ 0 THEN DO;
41748     +   H11  =    -0.61497493528093 * S_AvgAge  +     0.95387181547091 *
MPRINT(EM_DIAGRAM):   H12 = -0.10284288284194 * S_AvgAge + 0.37352136247344 * S_AvgTumorSize + 
0.68676513170483 * S_Avginv_node_group + 0.47005499648247 * S_deg_malig ;
41749     +        S_AvgTumorSize  +    -0.07696387186429 * S_Avginv_node_group
41750     +          +    -0.37968136001267 * S_deg_malig ;
41751     +   H12  =    -0.10284288284194 * S_AvgAge  +     0.37352136247344 *
MPRINT(EM_DIAGRAM):   H13 = 0.9145919034759 * S_AvgAge + 0.05826862125007 * S_AvgTumorSize + 
-0.00110862274069 * S_Avginv_node_group + 1.75176090163572 * S_deg_malig ;
41752     +        S_AvgTumorSize  +     0.68676513170483 * S_Avginv_node_group
41753     +          +     0.47005499648247 * S_deg_malig ;
41754     +   H13  =      0.9145919034759 * S_AvgAge  +     0.05826862125007 *
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.36327134003845 * IMP_node_capsno + -0.61958170054396 * 
breastleft + -0.76320688913225 * irradiatno ;
41755     +        S_AvgTumorSize  +    -0.00110862274069 * S_Avginv_node_group
41756     +          +     1.75176090163572 * S_deg_malig ;
41757     +   H11  = H11  +     0.36327134003845 * IMP_node_capsno
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.79264758501102 * IMP_node_capsno + 0.38736672542142 * 
breastleft + -0.41943897063306 * irradiatno ;
41758     +          +    -0.61958170054396 * breastleft  +    -0.76320688913225 *
41759     +        irradiatno ;
41760     +   H12  = H12  +     0.79264758501102 * IMP_node_capsno
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.57775127561597 * IMP_node_capsno + 0.72019942479724 * 
breastleft + -0.27388143245069 * irradiatno ;
41761     +          +     0.38736672542142 * breastleft  +    -0.41943897063306 *
41762     +        irradiatno ;
41763     +   H13  = H13  +    -0.57775127561597 * IMP_node_capsno
41764     +          +     0.72019942479724 * breastleft  +    -0.27388143245069 *
41765     +        irradiatno ;
41766     +   H11  = H11  +     0.03389920437167 * age20_29  +     0.72089986894102 *
41767     +        age30_39  +     0.28798904753624 * age40_49  +     0.44335242159532 *
41768     +        age50_59  +     0.52451229055658 * age60_69  +     0.26756102661582 *
41769     +        breast_quadcentral  +    -0.27707826700111 * breast_quadleft_low
41770     +          +    -0.50619587378469 * breast_quadleft_up
41771     +          +     0.32385655977639 * breast_quadright_low
41772     +          +    -0.34095159639954 * inv_nodes0_2  +      0.4491951931604 *
41773     +        inv_nodes12_14  +    -0.18585971024084 * inv_nodes15_17
41774     +          +     0.46197576963823 * inv_nodes24_26  +     1.13872977786161 *
41775     +        inv_nodes3_5  +    -0.24695704463614 * inv_nodes6_8
41776     +          +     -1.6254898573616 * menopausege40  +    -0.92858614182967 *
41777     +        menopauselt40  +    -0.38889900414931 * tumor_size0_4
41778     +          +    -1.07107947032064 * tumor_size10_14  +     0.03210466953987 *
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03389920437167 * age20_29 + 0.72089986894102 * age30_39 + 
0.28798904753624 * age40_49 + 0.44335242159532 * age50_59 + 0.52451229055658 * age60_69 + 
0.26756102661582 * breast_quadcentral + -0.27707826700111 * breast_quadleft_low + 
-0.50619587378469 * breast_quadleft_up + 0.32385655977639 * breast_quadright_low + 
-0.34095159639954 * inv_nodes0_2 + 0.4491951931604 * inv_nodes12_14 + -0.18585971024084 * 
inv_nodes15_17 + 0.46197576963823 * inv_nodes24_26 + 1.13872977786161 * inv_nodes3_5 + 
-0.24695704463614 * inv_nodes6_8 + -1.6254898573616 * menopausege40 + -0.92858614182967 * 
menopauselt40 + -0.38889900414931 * tumor_size0_4 + -1.07107947032064 * tumor_size10_14 + 
0.03210466953987 * tumor_size15_19 + 2.09618876020959 * tumor_size20_24 + -0.2438896271209 * 
tumor_size25_29 + -0.22402647329776 * tumor_size30_34 + 0.34369986972179 * tumor_size35_39 + 
0.10609442400314 * tumor_size40_44 + -0.33854013913445 * tumor_size45_49 + -0.02593198988185 * 
tumor_size5_9 ;
41779     +        tumor_size15_19  +     2.09618876020959 * tumor_size20_24
41780     +          +     -0.2438896271209 * tumor_size25_29  +    -0.22402647329776 *
41781     +        tumor_size30_34  +     0.34369986972179 * tumor_size35_39
41782     +          +     0.10609442400314 * tumor_size40_44  +    -0.33854013913445 *
41783     +        tumor_size45_49  +    -0.02593198988185 * tumor_size5_9 ;
41784     +   H12  = H12  +     0.01685296927978 * age20_29  +     0.35307919317833 *
41785     +        age30_39  +    -0.69893461072245 * age40_49  +    -0.24523441741186 *
41786     +        age50_59  +     0.07558333902437 * age60_69  +     0.37289958336996 *
41787     +        breast_quadcentral  +     0.36773572083573 * breast_quadleft_low
41788     +          +     1.18722346758725 * breast_quadleft_up
41789     +          +     0.06349587968543 * breast_quadright_low
41790     +          +      -0.059174362514 * inv_nodes0_2  +     0.15010019016924 *
41791     +        inv_nodes12_14  +     0.21292950214496 * inv_nodes15_17
41792     +          +    -0.38120373140886 * inv_nodes24_26  +    -0.78617065785688 *
41793     +        inv_nodes3_5  +    -0.53988580512066 * inv_nodes6_8
41794     +          +     0.37876358329232 * menopausege40  +     0.98534893153269 *
41795     +        menopauselt40  +     0.26937806074223 * tumor_size0_4
41796     +          +    -0.42069656657828 * tumor_size10_14  +    -0.06792429022016 *
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01685296927978 * age20_29 + 0.35307919317833 * age30_39 + 
-0.69893461072245 * age40_49 + -0.24523441741186 * age50_59 + 0.07558333902437 * age60_69 + 
0.37289958336996 * breast_quadcentral + 0.36773572083573 * breast_quadleft_low + 
1.18722346758725 * breast_quadleft_up + 0.06349587968543 * breast_quadright_low + 
-0.059174362514 * inv_nodes0_2 + 0.15010019016924 * inv_nodes12_14 + 0.21292950214496 * 
inv_nodes15_17 + -0.38120373140886 * inv_nodes24_26 + -0.78617065785688 * inv_nodes3_5 + 
-0.53988580512066 * inv_nodes6_8 + 0.37876358329232 * menopausege40 + 0.98534893153269 * 
menopauselt40 + 0.26937806074223 * tumor_size0_4 + -0.42069656657828 * tumor_size10_14 + 
-0.06792429022016 * tumor_size15_19 + 0.58136904760064 * tumor_size20_24 + -0.08769804820483 * 
tumor_size25_29 + 0.03374092030048 * tumor_size30_34 + 0.1829108052925 * tumor_size35_39 + 
0.01690568296329 * tumor_size40_44 + 0.13224531669088 * tumor_size45_49 + -0.22204959796125 * 
tumor_size5_9 ;
41797     +        tumor_size15_19  +     0.58136904760064 * tumor_size20_24
41798     +          +    -0.08769804820483 * tumor_size25_29  +     0.03374092030048 *
41799     +        tumor_size30_34  +      0.1829108052925 * tumor_size35_39
41800     +          +     0.01690568296329 * tumor_size40_44  +     0.13224531669088 *
41801     +        tumor_size45_49  +    -0.22204959796125 * tumor_size5_9 ;
41802     +   H13  = H13  +     0.18753630570782 * age20_29  +    -0.03350421785345 *
41803     +        age30_39  +     0.14623047416945 * age40_49  +    -0.41701616903549 *
41804     +        age50_59  +     0.89967320394619 * age60_69  +    -0.20761226509696 *
41805     +        breast_quadcentral  +    -1.04013447085256 * breast_quadleft_low
41806     +          +     -1.7692938970504 * breast_quadleft_up
41807     +          +     0.20743849640219 * breast_quadright_low
41808     +          +    -0.29974021420975 * inv_nodes0_2  +     0.85993563103741 *
41809     +        inv_nodes12_14  +     0.50250813126704 * inv_nodes15_17
41810     +          +     0.35668817181134 * inv_nodes24_26  +     1.00306353211516 *
41811     +        inv_nodes3_5  +      0.3582805661238 * inv_nodes6_8
41812     +          +     0.31231492228923 * menopausege40  +     0.61342571580869 *
41813     +        menopauselt40  +     0.20376513631778 * tumor_size0_4
41814     +          +      -0.185934474148 * tumor_size10_14  +    -0.10040191113771 *
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18753630570782 * age20_29 + -0.03350421785345 * age30_39 + 
0.14623047416945 * age40_49 + -0.41701616903549 * age50_59 + 0.89967320394619 * age60_69 + 
-0.20761226509696 * breast_quadcentral + -1.04013447085256 * breast_quadleft_low + 
-1.7692938970504 * breast_quadleft_up + 0.20743849640219 * breast_quadright_low + 
-0.29974021420975 * inv_nodes0_2 + 0.85993563103741 * inv_nodes12_14 + 0.50250813126704 * 
inv_nodes15_17 + 0.35668817181134 * inv_nodes24_26 + 1.00306353211516 * inv_nodes3_5 + 
0.3582805661238 * inv_nodes6_8 + 0.31231492228923 * menopausege40 + 0.61342571580869 * 
menopauselt40 + 0.20376513631778 * tumor_size0_4 + -0.185934474148 * tumor_size10_14 + 
-0.10040191113771 * tumor_size15_19 + 0.1860239709766 * tumor_size20_24 + 0.72634109614906 * 
tumor_size25_29 + 0.08646236423332 * tumor_size30_34 + 0.36660157691503 * tumor_size35_39 + 
-0.82183765104013 * tumor_size40_44 + 0.38021345065478 * tumor_size45_49 + -0.06805996233089 * 
tumor_size5_9 ;
41815     +        tumor_size15_19  +      0.1860239709766 * tumor_size20_24
MPRINT(EM_DIAGRAM):   H11 = 1.87635201395074 + H11 ;
41816     +          +     0.72634109614906 * tumor_size25_29  +     0.08646236423332 *
MPRINT(EM_DIAGRAM):   H12 = 0.04770355881681 + H12 ;
41817     +        tumor_size30_34  +     0.36660157691503 * tumor_size35_39
MPRINT(EM_DIAGRAM):   H13 = -1.760700478131 + H13 ;
41818     +          +    -0.82183765104013 * tumor_size40_44  +     0.38021345065478 *
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
41819     +        tumor_size45_49  +    -0.06805996233089 * tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
41820     +   H11  =     1.87635201395074 + H11 ;
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
41821     +   H12  =     0.04770355881681 + H12 ;
MPRINT(EM_DIAGRAM):   END;
41822     +   H13  =      -1.760700478131 + H13 ;
41823     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   ELSE DO;
41824     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H11 = .;
41825     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H12 = .;
41826     +END;
MPRINT(EM_DIAGRAM):   H13 = .;
41827     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
41828     +   H11  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node class ;
41829     +   H12  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
41830     +   H13  = .;
41831     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for class ;
41832     +*** *************************;
MPRINT(EM_DIAGRAM):   drop classrecurrence_events classno_recurrence_events ;
41833     +*** Writing the Node class ;
MPRINT(EM_DIAGRAM):   label F_class = 'From: class' ;
41834     +*** *************************;
41835     +
MPRINT(EM_DIAGRAM):   length F_class $ 20;
41836     +*** Generate dummy variables for class ;
41837     +drop classrecurrence_events classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   F_class = put( class , $20. );
41838     +label F_class = 'From: class' ;
41839     +length F_class $ 20;
MPRINT(DMNORMIP):   call dmnorm(F_class,
41840     +F_class = put( class , $20. );
41841     +%DMNORMIP( F_class )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( class ) then do;
MPRINT(EM_DIAGRAM):   classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   end;
41842     +if missing( class ) then do;
MPRINT(EM_DIAGRAM):   else do;
41843     +   classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   if F_class = 'NO-RECURRENCE-EVENTS' then do;
41844     +   classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   classrecurrence_events = 0;
41845     +end;
MPRINT(EM_DIAGRAM):   classno_recurrence_events = 1;
41846     +else do;
MPRINT(EM_DIAGRAM):   end;
41847     +   if F_class = 'NO-RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else if F_class = 'RECURRENCE-EVENTS' then do;
41848     +      classrecurrence_events = 0;
MPRINT(EM_DIAGRAM):   classrecurrence_events = 1;
41849     +      classno_recurrence_events = 1;
MPRINT(EM_DIAGRAM):   classno_recurrence_events = 0;
41850     +   end;
MPRINT(EM_DIAGRAM):   end;
41851     +   else if F_class = 'RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else do;
41852     +      classrecurrence_events = 1;
MPRINT(EM_DIAGRAM):   classrecurrence_events = .;
41853     +      classno_recurrence_events = 0;
MPRINT(EM_DIAGRAM):   classno_recurrence_events = .;
41854     +   end;
MPRINT(EM_DIAGRAM):   end;
41855     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
41856     +      classrecurrence_events = .;
41857     +      classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = 2.49224982498149 * H11 + 1.14059984464365 * 
H12 + 2.20917444320522 * H13 ;
41858     +   end;
41859     +end;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = -1.04524170486537 + P_classrecurrence_events ;
41860     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = 0;
41861     +   P_classrecurrence_events  =     2.49224982498149 * H11
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_classrecurrence_events , P_classno_recurrence_events );
41862     +          +     1.14059984464365 * H12  +     2.20917444320522 * H13 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
41863     +   P_classrecurrence_events  =    -1.04524170486537 + P_classrecurrence_events
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = EXP(P_classrecurrence_events - _MAX_);
41864     +         ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_classrecurrence_events ;
41865     +   P_classno_recurrence_events  = 0;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = EXP(P_classno_recurrence_events - _MAX_);
41866     +   _MAX_ = MAX (P_classrecurrence_events , P_classno_recurrence_events );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_classno_recurrence_events ;
41867     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = P_classrecurrence_events / _SUM_;
41868     +   P_classrecurrence_events  = EXP(P_classrecurrence_events  - _MAX_);
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = P_classno_recurrence_events / _SUM_;
41869     +   _SUM_ = _SUM_ + P_classrecurrence_events ;
MPRINT(EM_DIAGRAM):   END;
41870     +   P_classno_recurrence_events  = EXP(P_classno_recurrence_events  - _MAX_);
41871     +   _SUM_ = _SUM_ + P_classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   ELSE DO;
41872     +   P_classrecurrence_events  = P_classrecurrence_events  / _SUM_;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = .;
41873     +   P_classno_recurrence_events  = P_classno_recurrence_events  / _SUM_;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = .;
41874     +END;
MPRINT(EM_DIAGRAM):   END;
41875     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = 0.29203539823008;
41876     +   P_classrecurrence_events  = .;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = 0.70796460176991;
41877     +   P_classno_recurrence_events  = .;
MPRINT(EM_DIAGRAM):   END;
41878     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
41879     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node class ;
41880     +   P_classrecurrence_events  =     0.29203539823008;
MPRINT(EM_DIAGRAM):   *** ******************************;
41881     +   P_classno_recurrence_events  =     0.70796460176991;
MPRINT(EM_DIAGRAM):   IF MISSING( classrecurrence_events ) THEN R_classrecurrence_events = . ;
41882     +END;
41883     +*** *****************************;
41884     +*** Writing the Residuals  of the Node class ;
MPRINT(EM_DIAGRAM):   ELSE R_classrecurrence_events = classrecurrence_events - 
P_classrecurrence_events ;
41885     +*** ******************************;
41886     +IF MISSING( classrecurrence_events ) THEN R_classrecurrence_events  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( classno_recurrence_events ) THEN R_classno_recurrence_events 
= . ;
41887     +ELSE R_classrecurrence_events  = classrecurrence_events  -
41888     +        P_classrecurrence_events ;
MPRINT(EM_DIAGRAM):   ELSE R_classno_recurrence_events = classno_recurrence_events - 
P_classno_recurrence_events ;
41889     +IF MISSING( classno_recurrence_events ) THEN R_classno_recurrence_events
41890     +          = . ;
41891     +ELSE R_classno_recurrence_events  = classno_recurrence_events  -
MPRINT(EM_DIAGRAM):   *** Decision Processing;
MPRINT(EM_DIAGRAM):   label D_CLASS = 'Decision: class' ;
41892     +        P_classno_recurrence_events ;
41893     +
MPRINT(EM_DIAGRAM):   label EP_CLASS = 'Expected Profit: class' ;
41894     +
41895     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   label BP_CLASS = 'Best Profit: class' ;
41896     +label D_CLASS = 'Decision: class' ;
MPRINT(EM_DIAGRAM):   label CP_CLASS = 'Computed Profit: class' ;
41897     +label EP_CLASS = 'Expected Profit: class' ;
41898     +label BP_CLASS = 'Best Profit: class' ;
MPRINT(EM_DIAGRAM):   length D_CLASS $ 20;
41899     +label CP_CLASS = 'Computed Profit: class' ;
MPRINT(EM_DIAGRAM):   D_CLASS = ' ';
41900     +
MPRINT(EM_DIAGRAM):   EP_CLASS = .;
41901     +length D_CLASS $ 20;
MPRINT(EM_DIAGRAM):   BP_CLASS = .;
MPRINT(EM_DIAGRAM):   CP_CLASS = .;
41902     +
41903     +D_CLASS = ' ';
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
41904     +EP_CLASS = .;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
41905     +BP_CLASS = .;
41906     +CP_CLASS = .;
MPRINT(EM_DIAGRAM):   D_CLASS = 'RECURRENCE-EVENTS' ;
41907     +
MPRINT(EM_DIAGRAM):   EP_CLASS = P_classrecurrence_events * 1 + P_classno_recurrence_events * 
0;
41908     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   drop _sum;
41909     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _sum = P_classrecurrence_events * 0 + P_classno_recurrence_events * 1;
41910     +
MPRINT(EM_DIAGRAM):   if _sum > EP_CLASS + 4.547474E-13 then do;
41911     +D_CLASS = 'RECURRENCE-EVENTS' ;
MPRINT(EM_DIAGRAM):   EP_CLASS = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
41912     +EP_CLASS = P_classrecurrence_events * 1 + P_classno_recurrence_events * 0;
MPRINT(EM_DIAGRAM):   D_CLASS = 'NO-RECURRENCE-EVENTS' ;
41913     +drop _sum;
MPRINT(EM_DIAGRAM):   end;
41914     +_sum = P_classrecurrence_events * 0 + P_classno_recurrence_events * 1;
41915     +if _sum > EP_CLASS + 4.547474E-13 then do;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
41916     +   EP_CLASS = _sum; _decnum = 2;
41917     +   D_CLASS = 'NO-RECURRENCE-EVENTS' ;
41918     +end;
41919     +
MPRINT(EM_DIAGRAM):   array NEURALdema [2,2] _temporary_ ( 1 0 0 1 );
41920     +*** Decision Matrix;
41921     +array NEURALdema [2,2] _temporary_ (
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
41922     +/* row 1 */  1 0
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_class );
41923     +/* row 2 */  0 1
MPRINT(EM_DIAGRAM):   when('RECURRENCE-EVENTS' ) _tarnum = 1;
41924     +);
MPRINT(EM_DIAGRAM):   when('NO-RECURRENCE-EVENTS' ) _tarnum = 2;
41925     +
41926     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
41927     +drop _tarnum; select( F_class );
MPRINT(EM_DIAGRAM):   end;
41928     +   when('RECURRENCE-EVENTS' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto NEURALdeex;
41929     +   when('NO-RECURRENCE-EVENTS' ) _tarnum = 2;
41930     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   CP_CLASS = NEURALdema [_tarnum,_decnum];
41931     +end;
41932     +if _tarnum <= 0 then goto NEURALdeex;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
41933     +
MPRINT(EM_DIAGRAM):   array NEURALdebe [2] _temporary_ ( 1 1);
41934     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   BP_CLASS = NEURALdebe [_tarnum];
41935     +CP_CLASS = NEURALdema [_tarnum,_decnum];
41936     +
41937     +*** Best Possible Consequence of Any Decision without Cost;
41938     +array NEURALdebe [2] _temporary_ ( 1 1);
MPRINT(EM_DIAGRAM):   NEURALdeex:;
41939     +BP_CLASS = NEURALdebe [_tarnum];
41940     +
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
41941     +
MPRINT(EM_DIAGRAM):   *** *************************;
41942     +NEURALdeex:;
MPRINT(EM_DIAGRAM):   *** Writing the I_class AND U_class ;
MPRINT(EM_DIAGRAM):   *** *************************;
41943     +
MPRINT(EM_DIAGRAM):   _MAXP_ = P_classrecurrence_events ;
41944     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   I_class = "RECURRENCE-EVENTS   " ;
41945     +*** *************************;
MPRINT(EM_DIAGRAM):   U_class = "recurrence-events   " ;
41946     +*** Writing the I_class  AND U_class ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_classno_recurrence_events ) THEN DO;
41947     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_classno_recurrence_events ;
41948     +_MAXP_ = P_classrecurrence_events ;
MPRINT(EM_DIAGRAM):   I_class = "NO-RECURRENCE-EVENTS" ;
41949     +I_class  = "RECURRENCE-EVENTS   " ;
MPRINT(EM_DIAGRAM):   U_class = "no-recurrence-events" ;
41950     +U_class  = "recurrence-events   " ;
MPRINT(EM_DIAGRAM):   END;
41951     +IF( _MAXP_ LT P_classno_recurrence_events  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
41952     +   _MAXP_ = P_classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
41953     +   I_class  = "NO-RECURRENCE-EVENTS" ;
MPRINT(EM_DIAGRAM):   ********************************;
41954     +   U_class  = "no-recurrence-events" ;
41955     +END;
41956     +********************************;
41957     +*** End Scoring Code for Neural;
41958     +********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
41959     +drop
MPRINT(EM_DIAGRAM):   drop S_:;
41960     +H11
41961     +H12
41962     +H13
41963     +;
41964     +drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
41965      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
41966      quit;
41967      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
41968      filename emflow "D:\\127097210_Pahuja\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"D:\\127097210_Pahuja\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41969      *------------------------------------------------------------*;
41970      * Neural: Scoring VALIDATE data;
41971      *------------------------------------------------------------*;
41972      data EMWS1.Neural_VALIDATE
41973      / view=EMWS1.Neural_VALIDATE
41974      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_VALIDATE / view=EMWS1.Neural_VALIDATE ;
41975      set EMWS1.Impt_VALIDATE
41976      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_VALIDATE ;
41977      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      D:\\127097210_Pahuja\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
41978     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41979     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
41980     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41981     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
41982     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
41983     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
41984     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
41985     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
41986     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
41987     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
41988     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
41989     +LENGTH _WARN_ $4
41990     +      F_class  $ 20
41991     +      I_class  $ 20
41992     +      U_class  $ 20
41993     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_class $ 20 I_class $ 20 U_class $ 20 ;
41994     +      label S_AvgAge = 'Standard: AvgAge' ;
MPRINT(EM_DIAGRAM):   label S_AvgAge = 'Standard: AvgAge' ;
41995     +
41996     +      label S_AvgTumorSize = 'Standard: AvgTumorSize' ;
MPRINT(EM_DIAGRAM):   label S_AvgTumorSize = 'Standard: AvgTumorSize' ;
41997     +
41998     +      label S_Avginv_node_group = 'Standard: Avginv_node_group' ;
MPRINT(EM_DIAGRAM):   label S_Avginv_node_group = 'Standard: Avginv_node_group' ;
41999     +
42000     +      label S_deg_malig = 'Standard: deg_malig' ;
MPRINT(EM_DIAGRAM):   label S_deg_malig = 'Standard: deg_malig' ;
42001     +
42002     +      label IMP_node_capsno = 'Dummy: IMP_node_caps=no' ;
MPRINT(EM_DIAGRAM):   label IMP_node_capsno = 'Dummy: IMP_node_caps=no' ;
42003     +
42004     +      label breastleft = 'Dummy: breast=left' ;
MPRINT(EM_DIAGRAM):   label breastleft = 'Dummy: breast=left' ;
42005     +
42006     +      label irradiatno = 'Dummy: irradiat=no' ;
MPRINT(EM_DIAGRAM):   label irradiatno = 'Dummy: irradiat=no' ;
42007     +
42008     +      label age20_29 = 'Dummy: age=20-29' ;
MPRINT(EM_DIAGRAM):   label age20_29 = 'Dummy: age=20-29' ;
42009     +
42010     +      label age30_39 = 'Dummy: age=30-39' ;
MPRINT(EM_DIAGRAM):   label age30_39 = 'Dummy: age=30-39' ;
42011     +
42012     +      label age40_49 = 'Dummy: age=40-49' ;
MPRINT(EM_DIAGRAM):   label age40_49 = 'Dummy: age=40-49' ;
42013     +
42014     +      label age50_59 = 'Dummy: age=50-59' ;
MPRINT(EM_DIAGRAM):   label age50_59 = 'Dummy: age=50-59' ;
42015     +
42016     +      label age60_69 = 'Dummy: age=60-69' ;
MPRINT(EM_DIAGRAM):   label age60_69 = 'Dummy: age=60-69' ;
42017     +
42018     +      label breast_quadcentral = 'Dummy: breast_quad=central' ;
MPRINT(EM_DIAGRAM):   label breast_quadcentral = 'Dummy: breast_quad=central' ;
42019     +
42020     +      label breast_quadleft_low = 'Dummy: breast_quad=left_low' ;
MPRINT(EM_DIAGRAM):   label breast_quadleft_low = 'Dummy: breast_quad=left_low' ;
42021     +
42022     +      label breast_quadleft_up = 'Dummy: breast_quad=left_up' ;
MPRINT(EM_DIAGRAM):   label breast_quadleft_up = 'Dummy: breast_quad=left_up' ;
42023     +
42024     +      label breast_quadright_low = 'Dummy: breast_quad=right_low' ;
MPRINT(EM_DIAGRAM):   label breast_quadright_low = 'Dummy: breast_quad=right_low' ;
42025     +
42026     +      label inv_nodes0_2 = 'Dummy: inv_nodes=0-2' ;
MPRINT(EM_DIAGRAM):   label inv_nodes0_2 = 'Dummy: inv_nodes=0-2' ;
42027     +
42028     +      label inv_nodes12_14 = 'Dummy: inv_nodes=12-14' ;
MPRINT(EM_DIAGRAM):   label inv_nodes12_14 = 'Dummy: inv_nodes=12-14' ;
42029     +
42030     +      label inv_nodes15_17 = 'Dummy: inv_nodes=15-17' ;
MPRINT(EM_DIAGRAM):   label inv_nodes15_17 = 'Dummy: inv_nodes=15-17' ;
42031     +
42032     +      label inv_nodes24_26 = 'Dummy: inv_nodes=24-26' ;
MPRINT(EM_DIAGRAM):   label inv_nodes24_26 = 'Dummy: inv_nodes=24-26' ;
42033     +
42034     +      label inv_nodes3_5 = 'Dummy: inv_nodes=3-5' ;
MPRINT(EM_DIAGRAM):   label inv_nodes3_5 = 'Dummy: inv_nodes=3-5' ;
42035     +
42036     +      label inv_nodes6_8 = 'Dummy: inv_nodes=6-8' ;
MPRINT(EM_DIAGRAM):   label inv_nodes6_8 = 'Dummy: inv_nodes=6-8' ;
42037     +
42038     +      label menopausege40 = 'Dummy: menopause=ge40' ;
MPRINT(EM_DIAGRAM):   label menopausege40 = 'Dummy: menopause=ge40' ;
42039     +
42040     +      label menopauselt40 = 'Dummy: menopause=lt40' ;
MPRINT(EM_DIAGRAM):   label menopauselt40 = 'Dummy: menopause=lt40' ;
42041     +
42042     +      label tumor_size0_4 = 'Dummy: tumor_size=0-4' ;
MPRINT(EM_DIAGRAM):   label tumor_size0_4 = 'Dummy: tumor_size=0-4' ;
42043     +
42044     +      label tumor_size10_14 = 'Dummy: tumor_size=10-14' ;
MPRINT(EM_DIAGRAM):   label tumor_size10_14 = 'Dummy: tumor_size=10-14' ;
42045     +
42046     +      label tumor_size15_19 = 'Dummy: tumor_size=15-19' ;
MPRINT(EM_DIAGRAM):   label tumor_size15_19 = 'Dummy: tumor_size=15-19' ;
42047     +
42048     +      label tumor_size20_24 = 'Dummy: tumor_size=20-24' ;
MPRINT(EM_DIAGRAM):   label tumor_size20_24 = 'Dummy: tumor_size=20-24' ;
42049     +
42050     +      label tumor_size25_29 = 'Dummy: tumor_size=25-29' ;
MPRINT(EM_DIAGRAM):   label tumor_size25_29 = 'Dummy: tumor_size=25-29' ;
42051     +
42052     +      label tumor_size30_34 = 'Dummy: tumor_size=30-34' ;
MPRINT(EM_DIAGRAM):   label tumor_size30_34 = 'Dummy: tumor_size=30-34' ;
42053     +
42054     +      label tumor_size35_39 = 'Dummy: tumor_size=35-39' ;
MPRINT(EM_DIAGRAM):   label tumor_size35_39 = 'Dummy: tumor_size=35-39' ;
42055     +
42056     +      label tumor_size40_44 = 'Dummy: tumor_size=40-44' ;
MPRINT(EM_DIAGRAM):   label tumor_size40_44 = 'Dummy: tumor_size=40-44' ;
42057     +
42058     +      label tumor_size45_49 = 'Dummy: tumor_size=45-49' ;
MPRINT(EM_DIAGRAM):   label tumor_size45_49 = 'Dummy: tumor_size=45-49' ;
42059     +
42060     +      label tumor_size5_9 = 'Dummy: tumor_size=5-9' ;
MPRINT(EM_DIAGRAM):   label tumor_size5_9 = 'Dummy: tumor_size=5-9' ;
42061     +
42062     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
42063     +
42064     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
42065     +
42066     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
42067     +
42068     +      label I_class = 'Into: class' ;
MPRINT(EM_DIAGRAM):   label I_class = 'Into: class' ;
42069     +
42070     +      label F_class = 'From: class' ;
MPRINT(EM_DIAGRAM):   label F_class = 'From: class' ;
42071     +
42072     +      label U_class = 'Unnormalized Into: class' ;
MPRINT(EM_DIAGRAM):   label U_class = 'Unnormalized Into: class' ;
42073     +
42074     +      label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_classrecurrence_events = 'Predicted: class=recurrence-events' ;
42075     +
42076     +      label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_classrecurrence_events = 'Residual: class=recurrence-events' ;
42077     +
42078     +      label P_classno_recurrence_events =
42079     +'Predicted: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_classno_recurrence_events = 'Predicted: 
class=no-recurrence-events' ;
42080     +
42081     +      label R_classno_recurrence_events =
42082     +'Residual: class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_classno_recurrence_events = 'Residual: 
class=no-recurrence-events' ;
42083     +
42084     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
42085     +
42086     +*** Generate dummy variables for IMP_node_caps ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for IMP_node_caps ;
42087     +drop IMP_node_capsno ;
MPRINT(EM_DIAGRAM):   drop IMP_node_capsno ;
42088     +if missing( IMP_node_caps ) then do;
MPRINT(EM_DIAGRAM):   if missing( IMP_node_caps ) then do;
42089     +   IMP_node_capsno = .;
MPRINT(EM_DIAGRAM):   IMP_node_capsno = .;
42090     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42091     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42092     +end;
MPRINT(EM_DIAGRAM):   end;
42093     +else do;
MPRINT(EM_DIAGRAM):   else do;
42094     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
42095     +   _dm3 = put( IMP_node_caps , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( IMP_node_caps , $3. );
42096     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42097     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
42098     +      IMP_node_capsno = 1;
MPRINT(EM_DIAGRAM):   IMP_node_capsno = 1;
42099     +   end;
MPRINT(EM_DIAGRAM):   end;
42100     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
42101     +      IMP_node_capsno = -1;
MPRINT(EM_DIAGRAM):   IMP_node_capsno = -1;
42102     +   end;
MPRINT(EM_DIAGRAM):   end;
42103     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42104     +      IMP_node_capsno = .;
MPRINT(EM_DIAGRAM):   IMP_node_capsno = .;
42105     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42106     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42107     +   end;
MPRINT(EM_DIAGRAM):   end;
42108     +end;
MPRINT(EM_DIAGRAM):   end;
42109     +
42110     +*** Generate dummy variables for breast ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast ;
42111     +drop breastleft ;
MPRINT(EM_DIAGRAM):   drop breastleft ;
42112     +if missing( breast ) then do;
MPRINT(EM_DIAGRAM):   if missing( breast ) then do;
42113     +   breastleft = .;
MPRINT(EM_DIAGRAM):   breastleft = .;
42114     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42115     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42116     +end;
MPRINT(EM_DIAGRAM):   end;
42117     +else do;
MPRINT(EM_DIAGRAM):   else do;
42118     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
42119     +   _dm5 = put( breast , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( breast , $5. );
42120     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42121     +   if _dm5 = 'LEFT'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'LEFT' then do;
42122     +      breastleft = 1;
MPRINT(EM_DIAGRAM):   breastleft = 1;
42123     +   end;
MPRINT(EM_DIAGRAM):   end;
42124     +   else if _dm5 = 'RIGHT'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'RIGHT' then do;
42125     +      breastleft = -1;
MPRINT(EM_DIAGRAM):   breastleft = -1;
42126     +   end;
MPRINT(EM_DIAGRAM):   end;
42127     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42128     +      breastleft = .;
MPRINT(EM_DIAGRAM):   breastleft = .;
42129     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42130     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42131     +   end;
MPRINT(EM_DIAGRAM):   end;
42132     +end;
MPRINT(EM_DIAGRAM):   end;
42133     +
42134     +*** Generate dummy variables for irradiat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for irradiat ;
42135     +drop irradiatno ;
MPRINT(EM_DIAGRAM):   drop irradiatno ;
42136     +if missing( irradiat ) then do;
MPRINT(EM_DIAGRAM):   if missing( irradiat ) then do;
42137     +   irradiatno = .;
MPRINT(EM_DIAGRAM):   irradiatno = .;
42138     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42139     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42140     +end;
MPRINT(EM_DIAGRAM):   end;
42141     +else do;
MPRINT(EM_DIAGRAM):   else do;
42142     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
42143     +   _dm3 = put( irradiat , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( irradiat , $3. );
42144     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42145     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
42146     +      irradiatno = 1;
MPRINT(EM_DIAGRAM):   irradiatno = 1;
42147     +   end;
MPRINT(EM_DIAGRAM):   end;
42148     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
42149     +      irradiatno = -1;
MPRINT(EM_DIAGRAM):   irradiatno = -1;
42150     +   end;
MPRINT(EM_DIAGRAM):   end;
42151     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42152     +      irradiatno = .;
MPRINT(EM_DIAGRAM):   irradiatno = .;
42153     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42154     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42155     +   end;
MPRINT(EM_DIAGRAM):   end;
42156     +end;
MPRINT(EM_DIAGRAM):   end;
42157     +
42158     +*** Generate dummy variables for age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for age ;
42159     +drop age20_29 age30_39 age40_49 age50_59 age60_69 ;
MPRINT(EM_DIAGRAM):   drop age20_29 age30_39 age40_49 age50_59 age60_69 ;
42160     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42161     +age20_29 = 0;
MPRINT(EM_DIAGRAM):   age20_29 = 0;
42162     +age30_39 = 0;
MPRINT(EM_DIAGRAM):   age30_39 = 0;
42163     +age40_49 = 0;
MPRINT(EM_DIAGRAM):   age40_49 = 0;
42164     +age50_59 = 0;
MPRINT(EM_DIAGRAM):   age50_59 = 0;
42165     +age60_69 = 0;
MPRINT(EM_DIAGRAM):   age60_69 = 0;
42166     +if missing( age ) then do;
MPRINT(EM_DIAGRAM):   if missing( age ) then do;
42167     +   age20_29 = .;
MPRINT(EM_DIAGRAM):   age20_29 = .;
42168     +   age30_39 = .;
MPRINT(EM_DIAGRAM):   age30_39 = .;
42169     +   age40_49 = .;
MPRINT(EM_DIAGRAM):   age40_49 = .;
42170     +   age50_59 = .;
MPRINT(EM_DIAGRAM):   age50_59 = .;
42171     +   age60_69 = .;
MPRINT(EM_DIAGRAM):   age60_69 = .;
42172     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42173     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42174     +end;
MPRINT(EM_DIAGRAM):   end;
42175     +else do;
MPRINT(EM_DIAGRAM):   else do;
42176     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
42177     +   _dm5 = put( age , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( age , $5. );
42178     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42179     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
42180     +   if _dm5 <= '40-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-49' then do;
42181     +      if _dm5 <= '30-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-39' then do;
42182     +         if _dm5 = '20-29'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-29' then do;
42183     +            age20_29 = 1;
MPRINT(EM_DIAGRAM):   age20_29 = 1;
42184     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42185     +         end;
MPRINT(EM_DIAGRAM):   end;
42186     +         else do;
MPRINT(EM_DIAGRAM):   else do;
42187     +            if _dm5 = '30-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-39' then do;
42188     +               age30_39 = 1;
MPRINT(EM_DIAGRAM):   age30_39 = 1;
42189     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42190     +            end;
MPRINT(EM_DIAGRAM):   end;
42191     +         end;
MPRINT(EM_DIAGRAM):   end;
42192     +      end;
MPRINT(EM_DIAGRAM):   end;
42193     +      else do;
MPRINT(EM_DIAGRAM):   else do;
42194     +         if _dm5 = '40-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-49' then do;
42195     +            age40_49 = 1;
MPRINT(EM_DIAGRAM):   age40_49 = 1;
42196     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42197     +         end;
MPRINT(EM_DIAGRAM):   end;
42198     +      end;
MPRINT(EM_DIAGRAM):   end;
42199     +   end;
MPRINT(EM_DIAGRAM):   end;
42200     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42201     +      if _dm5 <= '60-69'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '60-69' then do;
42202     +         if _dm5 = '50-59'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-59' then do;
42203     +            age50_59 = 1;
MPRINT(EM_DIAGRAM):   age50_59 = 1;
42204     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42205     +         end;
MPRINT(EM_DIAGRAM):   end;
42206     +         else do;
MPRINT(EM_DIAGRAM):   else do;
42207     +            if _dm5 = '60-69'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '60-69' then do;
42208     +               age60_69 = 1;
MPRINT(EM_DIAGRAM):   age60_69 = 1;
42209     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42210     +            end;
MPRINT(EM_DIAGRAM):   end;
42211     +         end;
MPRINT(EM_DIAGRAM):   end;
42212     +      end;
MPRINT(EM_DIAGRAM):   end;
42213     +      else do;
MPRINT(EM_DIAGRAM):   else do;
42214     +         if _dm5 = '70-79'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '70-79' then do;
42215     +            age20_29 = -1;
MPRINT(EM_DIAGRAM):   age20_29 = -1;
42216     +            age30_39 = -1;
MPRINT(EM_DIAGRAM):   age30_39 = -1;
42217     +            age40_49 = -1;
MPRINT(EM_DIAGRAM):   age40_49 = -1;
42218     +            age50_59 = -1;
MPRINT(EM_DIAGRAM):   age50_59 = -1;
42219     +            age60_69 = -1;
MPRINT(EM_DIAGRAM):   age60_69 = -1;
42220     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42221     +         end;
MPRINT(EM_DIAGRAM):   end;
42222     +      end;
MPRINT(EM_DIAGRAM):   end;
42223     +   end;
MPRINT(EM_DIAGRAM):   end;
42224     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
42225     +      age20_29 = .;
MPRINT(EM_DIAGRAM):   age20_29 = .;
42226     +      age30_39 = .;
MPRINT(EM_DIAGRAM):   age30_39 = .;
42227     +      age40_49 = .;
MPRINT(EM_DIAGRAM):   age40_49 = .;
42228     +      age50_59 = .;
MPRINT(EM_DIAGRAM):   age50_59 = .;
42229     +      age60_69 = .;
MPRINT(EM_DIAGRAM):   age60_69 = .;
42230     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42231     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42232     +   end;
MPRINT(EM_DIAGRAM):   end;
42233     +end;
MPRINT(EM_DIAGRAM):   end;
42234     +
42235     +*** Generate dummy variables for breast_quad ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast_quad ;
42236     +drop breast_quadcentral breast_quadleft_low breast_quadleft_up
42237     +        breast_quadright_low ;
MPRINT(EM_DIAGRAM):   drop breast_quadcentral breast_quadleft_low breast_quadleft_up 
breast_quadright_low ;
42238     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42239     +breast_quadcentral = 0;
MPRINT(EM_DIAGRAM):   breast_quadcentral = 0;
42240     +breast_quadleft_low = 0;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = 0;
42241     +breast_quadleft_up = 0;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = 0;
42242     +breast_quadright_low = 0;
MPRINT(EM_DIAGRAM):   breast_quadright_low = 0;
42243     +if missing( breast_quad ) then do;
MPRINT(EM_DIAGRAM):   if missing( breast_quad ) then do;
42244     +   breast_quadcentral = .;
MPRINT(EM_DIAGRAM):   breast_quadcentral = .;
42245     +   breast_quadleft_low = .;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = .;
42246     +   breast_quadleft_up = .;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = .;
42247     +   breast_quadright_low = .;
MPRINT(EM_DIAGRAM):   breast_quadright_low = .;
42248     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42249     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42250     +end;
MPRINT(EM_DIAGRAM):   end;
42251     +else do;
MPRINT(EM_DIAGRAM):   else do;
42252     +   length _dm9 $ 9; drop _dm9 ;
MPRINT(EM_DIAGRAM):   length _dm9 $ 9;
MPRINT(EM_DIAGRAM):   drop _dm9 ;
42253     +   _dm9 = put( breast_quad , $9. );
MPRINT(EM_DIAGRAM):   _dm9 = put( breast_quad , $9. );
42254     +   %DMNORMIP( _dm9 )
MPRINT(DMNORMIP):   call dmnorm(_dm9,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42255     +   if _dm9 = 'LEFT_UP'  then do;
MPRINT(EM_DIAGRAM):   if _dm9 = 'LEFT_UP' then do;
42256     +      breast_quadleft_up = 1;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = 1;
42257     +   end;
MPRINT(EM_DIAGRAM):   end;
42258     +   else if _dm9 = 'LEFT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'LEFT_LOW' then do;
42259     +      breast_quadleft_low = 1;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = 1;
42260     +   end;
MPRINT(EM_DIAGRAM):   end;
42261     +   else if _dm9 = 'RIGHT_UP'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_UP' then do;
42262     +      breast_quadcentral = -1;
MPRINT(EM_DIAGRAM):   breast_quadcentral = -1;
42263     +      breast_quadleft_low = -1;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = -1;
42264     +      breast_quadleft_up = -1;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = -1;
42265     +      breast_quadright_low = -1;
MPRINT(EM_DIAGRAM):   breast_quadright_low = -1;
42266     +   end;
MPRINT(EM_DIAGRAM):   end;
42267     +   else if _dm9 = 'CENTRAL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'CENTRAL' then do;
42268     +      breast_quadcentral = 1;
MPRINT(EM_DIAGRAM):   breast_quadcentral = 1;
42269     +   end;
MPRINT(EM_DIAGRAM):   end;
42270     +   else if _dm9 = 'RIGHT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_LOW' then do;
42271     +      breast_quadright_low = 1;
MPRINT(EM_DIAGRAM):   breast_quadright_low = 1;
42272     +   end;
MPRINT(EM_DIAGRAM):   end;
42273     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42274     +      breast_quadcentral = .;
MPRINT(EM_DIAGRAM):   breast_quadcentral = .;
42275     +      breast_quadleft_low = .;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = .;
42276     +      breast_quadleft_up = .;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = .;
42277     +      breast_quadright_low = .;
MPRINT(EM_DIAGRAM):   breast_quadright_low = .;
42278     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42279     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42280     +   end;
MPRINT(EM_DIAGRAM):   end;
42281     +end;
MPRINT(EM_DIAGRAM):   end;
42282     +
42283     +*** Generate dummy variables for inv_nodes ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for inv_nodes ;
42284     +drop inv_nodes0_2 inv_nodes12_14 inv_nodes15_17 inv_nodes24_26 inv_nodes3_5
42285     +        inv_nodes6_8 ;
MPRINT(EM_DIAGRAM):   drop inv_nodes0_2 inv_nodes12_14 inv_nodes15_17 inv_nodes24_26 
inv_nodes3_5 inv_nodes6_8 ;
42286     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42287     +inv_nodes0_2 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = 0;
42288     +inv_nodes12_14 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = 0;
42289     +inv_nodes15_17 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = 0;
42290     +inv_nodes24_26 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = 0;
42291     +inv_nodes3_5 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = 0;
42292     +inv_nodes6_8 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = 0;
42293     +if missing( inv_nodes ) then do;
MPRINT(EM_DIAGRAM):   if missing( inv_nodes ) then do;
42294     +   inv_nodes0_2 = .;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = .;
42295     +   inv_nodes12_14 = .;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = .;
42296     +   inv_nodes15_17 = .;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = .;
42297     +   inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = .;
42298     +   inv_nodes3_5 = .;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = .;
42299     +   inv_nodes6_8 = .;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = .;
42300     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42301     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42302     +end;
MPRINT(EM_DIAGRAM):   end;
42303     +else do;
MPRINT(EM_DIAGRAM):   else do;
42304     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
42305     +   _dm5 = put( inv_nodes , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( inv_nodes , $5. );
42306     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42307     +   if _dm5 = '0-2'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-2' then do;
42308     +      inv_nodes0_2 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = 1;
42309     +   end;
MPRINT(EM_DIAGRAM):   end;
42310     +   else if _dm5 = '3-5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '3-5' then do;
42311     +      inv_nodes3_5 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = 1;
42312     +   end;
MPRINT(EM_DIAGRAM):   end;
42313     +   else if _dm5 = '6-8'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '6-8' then do;
42314     +      inv_nodes6_8 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = 1;
42315     +   end;
MPRINT(EM_DIAGRAM):   end;
42316     +   else if _dm5 = '9-11'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '9-11' then do;
42317     +      inv_nodes0_2 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = -1;
42318     +      inv_nodes12_14 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = -1;
42319     +      inv_nodes15_17 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = -1;
42320     +      inv_nodes24_26 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = -1;
42321     +      inv_nodes3_5 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = -1;
42322     +      inv_nodes6_8 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = -1;
42323     +   end;
MPRINT(EM_DIAGRAM):   end;
42324     +   else if _dm5 = '15-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '15-17' then do;
42325     +      inv_nodes15_17 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = 1;
42326     +   end;
MPRINT(EM_DIAGRAM):   end;
42327     +   else if _dm5 = '12-14'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '12-14' then do;
42328     +      inv_nodes12_14 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = 1;
42329     +   end;
MPRINT(EM_DIAGRAM):   end;
42330     +   else if _dm5 = '24-26'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '24-26' then do;
42331     +      inv_nodes24_26 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = 1;
42332     +   end;
MPRINT(EM_DIAGRAM):   end;
42333     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42334     +      inv_nodes0_2 = .;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = .;
42335     +      inv_nodes12_14 = .;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = .;
42336     +      inv_nodes15_17 = .;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = .;
42337     +      inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = .;
42338     +      inv_nodes3_5 = .;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = .;
42339     +      inv_nodes6_8 = .;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = .;
42340     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42341     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42342     +   end;
MPRINT(EM_DIAGRAM):   end;
42343     +end;
MPRINT(EM_DIAGRAM):   end;
42344     +
42345     +*** Generate dummy variables for menopause ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for menopause ;
42346     +drop menopausege40 menopauselt40 ;
MPRINT(EM_DIAGRAM):   drop menopausege40 menopauselt40 ;
42347     +if missing( menopause ) then do;
MPRINT(EM_DIAGRAM):   if missing( menopause ) then do;
42348     +   menopausege40 = .;
MPRINT(EM_DIAGRAM):   menopausege40 = .;
42349     +   menopauselt40 = .;
MPRINT(EM_DIAGRAM):   menopauselt40 = .;
42350     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42351     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42352     +end;
MPRINT(EM_DIAGRAM):   end;
42353     +else do;
MPRINT(EM_DIAGRAM):   else do;
42354     +   length _dm7 $ 7; drop _dm7 ;
MPRINT(EM_DIAGRAM):   length _dm7 $ 7;
MPRINT(EM_DIAGRAM):   drop _dm7 ;
42355     +   _dm7 = put( menopause , $7. );
MPRINT(EM_DIAGRAM):   _dm7 = put( menopause , $7. );
42356     +   %DMNORMIP( _dm7 )
MPRINT(DMNORMIP):   call dmnorm(_dm7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42357     +   if _dm7 = 'PREMENO'  then do;
MPRINT(EM_DIAGRAM):   if _dm7 = 'PREMENO' then do;
42358     +      menopausege40 = -1;
MPRINT(EM_DIAGRAM):   menopausege40 = -1;
42359     +      menopauselt40 = -1;
MPRINT(EM_DIAGRAM):   menopauselt40 = -1;
42360     +   end;
MPRINT(EM_DIAGRAM):   end;
42361     +   else if _dm7 = 'GE40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'GE40' then do;
42362     +      menopausege40 = 1;
MPRINT(EM_DIAGRAM):   menopausege40 = 1;
42363     +      menopauselt40 = 0;
MPRINT(EM_DIAGRAM):   menopauselt40 = 0;
42364     +   end;
MPRINT(EM_DIAGRAM):   end;
42365     +   else if _dm7 = 'LT40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'LT40' then do;
42366     +      menopausege40 = 0;
MPRINT(EM_DIAGRAM):   menopausege40 = 0;
42367     +      menopauselt40 = 1;
MPRINT(EM_DIAGRAM):   menopauselt40 = 1;
42368     +   end;
MPRINT(EM_DIAGRAM):   end;
42369     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42370     +      menopausege40 = .;
MPRINT(EM_DIAGRAM):   menopausege40 = .;
42371     +      menopauselt40 = .;
MPRINT(EM_DIAGRAM):   menopauselt40 = .;
42372     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42373     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42374     +   end;
MPRINT(EM_DIAGRAM):   end;
42375     +end;
MPRINT(EM_DIAGRAM):   end;
42376     +
42377     +*** Generate dummy variables for tumor_size ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for tumor_size ;
42378     +drop tumor_size0_4 tumor_size10_14 tumor_size15_19 tumor_size20_24
42379     +        tumor_size25_29 tumor_size30_34 tumor_size35_39 tumor_size40_44
42380     +        tumor_size45_49 tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   drop tumor_size0_4 tumor_size10_14 tumor_size15_19 tumor_size20_24 
tumor_size25_29 tumor_size30_34 tumor_size35_39 tumor_size40_44 tumor_size45_49 tumor_size5_9 ;
42381     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42382     +tumor_size0_4 = 0;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = 0;
42383     +tumor_size10_14 = 0;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = 0;
42384     +tumor_size15_19 = 0;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = 0;
42385     +tumor_size20_24 = 0;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = 0;
42386     +tumor_size25_29 = 0;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = 0;
42387     +tumor_size30_34 = 0;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = 0;
42388     +tumor_size35_39 = 0;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = 0;
42389     +tumor_size40_44 = 0;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = 0;
42390     +tumor_size45_49 = 0;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = 0;
42391     +tumor_size5_9 = 0;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = 0;
42392     +if missing( tumor_size ) then do;
MPRINT(EM_DIAGRAM):   if missing( tumor_size ) then do;
42393     +   tumor_size0_4 = .;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = .;
42394     +   tumor_size10_14 = .;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = .;
42395     +   tumor_size15_19 = .;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = .;
42396     +   tumor_size20_24 = .;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = .;
42397     +   tumor_size25_29 = .;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = .;
42398     +   tumor_size30_34 = .;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = .;
42399     +   tumor_size35_39 = .;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = .;
42400     +   tumor_size40_44 = .;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = .;
42401     +   tumor_size45_49 = .;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = .;
42402     +   tumor_size5_9 = .;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = .;
42403     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42404     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42405     +end;
MPRINT(EM_DIAGRAM):   end;
42406     +else do;
MPRINT(EM_DIAGRAM):   else do;
42407     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
42408     +   _dm5 = put( tumor_size , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( tumor_size , $5. );
42409     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42410     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
42411     +   if _dm5 <= '30-34'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-34' then do;
42412     +      if _dm5 <= '15-19'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '15-19' then do;
42413     +         if _dm5 <= '10-14'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '10-14' then do;
42414     +            if _dm5 = '0-4'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-4' then do;
42415     +               tumor_size0_4 = 1;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = 1;
42416     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42417     +            end;
MPRINT(EM_DIAGRAM):   end;
42418     +            else do;
MPRINT(EM_DIAGRAM):   else do;
42419     +               if _dm5 = '10-14'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '10-14' then do;
42420     +                  tumor_size10_14 = 1;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = 1;
42421     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42422     +               end;
MPRINT(EM_DIAGRAM):   end;
42423     +            end;
MPRINT(EM_DIAGRAM):   end;
42424     +         end;
MPRINT(EM_DIAGRAM):   end;
42425     +         else do;
MPRINT(EM_DIAGRAM):   else do;
42426     +            if _dm5 = '15-19'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '15-19' then do;
42427     +               tumor_size15_19 = 1;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = 1;
42428     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42429     +            end;
MPRINT(EM_DIAGRAM):   end;
42430     +         end;
MPRINT(EM_DIAGRAM):   end;
42431     +      end;
MPRINT(EM_DIAGRAM):   end;
42432     +      else do;
MPRINT(EM_DIAGRAM):   else do;
42433     +         if _dm5 <= '25-29'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '25-29' then do;
42434     +            if _dm5 = '20-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-24' then do;
42435     +               tumor_size20_24 = 1;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = 1;
42436     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42437     +            end;
MPRINT(EM_DIAGRAM):   end;
42438     +            else do;
MPRINT(EM_DIAGRAM):   else do;
42439     +               if _dm5 = '25-29'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '25-29' then do;
42440     +                  tumor_size25_29 = 1;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = 1;
42441     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42442     +               end;
MPRINT(EM_DIAGRAM):   end;
42443     +            end;
MPRINT(EM_DIAGRAM):   end;
42444     +         end;
MPRINT(EM_DIAGRAM):   end;
42445     +         else do;
MPRINT(EM_DIAGRAM):   else do;
42446     +            if _dm5 = '30-34'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-34' then do;
42447     +               tumor_size30_34 = 1;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = 1;
42448     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42449     +            end;
MPRINT(EM_DIAGRAM):   end;
42450     +         end;
MPRINT(EM_DIAGRAM):   end;
42451     +      end;
MPRINT(EM_DIAGRAM):   end;
42452     +   end;
MPRINT(EM_DIAGRAM):   end;
42453     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42454     +      if _dm5 <= '45-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '45-49' then do;
42455     +         if _dm5 <= '40-44'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-44' then do;
42456     +            if _dm5 = '35-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '35-39' then do;
42457     +               tumor_size35_39 = 1;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = 1;
42458     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42459     +            end;
MPRINT(EM_DIAGRAM):   end;
42460     +            else do;
MPRINT(EM_DIAGRAM):   else do;
42461     +               if _dm5 = '40-44'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-44' then do;
42462     +                  tumor_size40_44 = 1;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = 1;
42463     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42464     +               end;
MPRINT(EM_DIAGRAM):   end;
42465     +            end;
MPRINT(EM_DIAGRAM):   end;
42466     +         end;
MPRINT(EM_DIAGRAM):   end;
42467     +         else do;
MPRINT(EM_DIAGRAM):   else do;
42468     +            if _dm5 = '45-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '45-49' then do;
42469     +               tumor_size45_49 = 1;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = 1;
42470     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42471     +            end;
MPRINT(EM_DIAGRAM):   end;
42472     +         end;
MPRINT(EM_DIAGRAM):   end;
42473     +      end;
MPRINT(EM_DIAGRAM):   end;
42474     +      else do;
MPRINT(EM_DIAGRAM):   else do;
42475     +         if _dm5 = '5-9'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '5-9' then do;
42476     +            tumor_size5_9 = 1;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = 1;
42477     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42478     +         end;
MPRINT(EM_DIAGRAM):   end;
42479     +         else do;
MPRINT(EM_DIAGRAM):   else do;
42480     +            if _dm5 = '50-54'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-54' then do;
42481     +               tumor_size0_4 = -1;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = -1;
42482     +               tumor_size10_14 = -1;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = -1;
42483     +               tumor_size15_19 = -1;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = -1;
42484     +               tumor_size20_24 = -1;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = -1;
42485     +               tumor_size25_29 = -1;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = -1;
42486     +               tumor_size30_34 = -1;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = -1;
42487     +               tumor_size35_39 = -1;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = -1;
42488     +               tumor_size40_44 = -1;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = -1;
42489     +               tumor_size45_49 = -1;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = -1;
42490     +               tumor_size5_9 = -1;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = -1;
42491     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42492     +            end;
MPRINT(EM_DIAGRAM):   end;
42493     +         end;
MPRINT(EM_DIAGRAM):   end;
42494     +      end;
MPRINT(EM_DIAGRAM):   end;
42495     +   end;
MPRINT(EM_DIAGRAM):   end;
42496     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
42497     +      tumor_size0_4 = .;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = .;
42498     +      tumor_size10_14 = .;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = .;
42499     +      tumor_size15_19 = .;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = .;
42500     +      tumor_size20_24 = .;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = .;
42501     +      tumor_size25_29 = .;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = .;
42502     +      tumor_size30_34 = .;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = .;
42503     +      tumor_size35_39 = .;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = .;
42504     +      tumor_size40_44 = .;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = .;
42505     +      tumor_size45_49 = .;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = .;
42506     +      tumor_size5_9 = .;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = .;
42507     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42508     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42509     +   end;
MPRINT(EM_DIAGRAM):   end;
42510     +end;
MPRINT(EM_DIAGRAM):   end;
42511     +
42512     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42513     +*** Checking missing input Interval
42514     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
42515     +
42516     +IF NMISS(
42517     +   AvgAge ,
42518     +   AvgTumorSize ,
42519     +   Avginv_node_group ,
42520     +   deg_malig   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AvgAge , AvgTumorSize , Avginv_node_group , deg_malig ) THEN 
DO;
42521     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
42522     +
42523     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42524     +END;
MPRINT(EM_DIAGRAM):   END;
42525     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42526     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
42527     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42528     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42529     +   S_AvgAge  =    -5.17542134396122 +     0.10002730056017 * AvgAge ;
MPRINT(EM_DIAGRAM):   S_AvgAge = -5.17542134396122 + 0.10002730056017 * AvgAge ;
42530     +   S_AvgTumorSize  =    -2.52494540353916 +     0.09506760766352 *
42531     +        AvgTumorSize ;
MPRINT(EM_DIAGRAM):   S_AvgTumorSize = -2.52494540353916 + 0.09506760766352 * AvgTumorSize ;
42532     +   S_Avginv_node_group  =    -0.69351787747727 +     0.31173971918285 *
42533     +        Avginv_node_group ;
MPRINT(EM_DIAGRAM):   S_Avginv_node_group = -0.69351787747727 + 0.31173971918285 * 
Avginv_node_group ;
42534     +   S_deg_malig  =    -2.75629070254781 +     1.34265662978187 * deg_malig ;
MPRINT(EM_DIAGRAM):   S_deg_malig = -2.75629070254781 + 1.34265662978187 * deg_malig ;
42535     +END;
MPRINT(EM_DIAGRAM):   END;
42536     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42537     +   IF MISSING( AvgAge ) THEN S_AvgAge  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AvgAge ) THEN S_AvgAge = . ;
42538     +   ELSE S_AvgAge  =    -5.17542134396122 +     0.10002730056017 * AvgAge ;
MPRINT(EM_DIAGRAM):   ELSE S_AvgAge = -5.17542134396122 + 0.10002730056017 * AvgAge ;
42539     +   IF MISSING( AvgTumorSize ) THEN S_AvgTumorSize  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AvgTumorSize ) THEN S_AvgTumorSize = . ;
42540     +   ELSE S_AvgTumorSize  =    -2.52494540353916 +     0.09506760766352 *
42541     +        AvgTumorSize ;
MPRINT(EM_DIAGRAM):   ELSE S_AvgTumorSize = -2.52494540353916 + 0.09506760766352 * 
AvgTumorSize ;
42542     +   IF MISSING( Avginv_node_group ) THEN S_Avginv_node_group  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Avginv_node_group ) THEN S_Avginv_node_group = . ;
42543     +   ELSE S_Avginv_node_group  =    -0.69351787747727 +     0.31173971918285 *
42544     +        Avginv_node_group ;
MPRINT(EM_DIAGRAM):   ELSE S_Avginv_node_group = -0.69351787747727 + 0.31173971918285 * 
Avginv_node_group ;
42545     +   IF MISSING( deg_malig ) THEN S_deg_malig  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( deg_malig ) THEN S_deg_malig = . ;
42546     +   ELSE S_deg_malig  =    -2.75629070254781 +     1.34265662978187 * deg_malig
42547     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_deg_malig = -2.75629070254781 + 1.34265662978187 * deg_malig ;
42548     +END;
MPRINT(EM_DIAGRAM):   END;
42549     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42550     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
42551     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42552     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42553     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
42554     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42555     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42556     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
42557     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42558     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42559     +   H11  =    -0.61497493528093 * S_AvgAge  +     0.95387181547091 *
42560     +        S_AvgTumorSize  +    -0.07696387186429 * S_Avginv_node_group
42561     +          +    -0.37968136001267 * S_deg_malig ;
MPRINT(EM_DIAGRAM):   H11 = -0.61497493528093 * S_AvgAge + 0.95387181547091 * S_AvgTumorSize + 
-0.07696387186429 * S_Avginv_node_group + -0.37968136001267 * S_deg_malig ;
42562     +   H12  =    -0.10284288284194 * S_AvgAge  +     0.37352136247344 *
42563     +        S_AvgTumorSize  +     0.68676513170483 * S_Avginv_node_group
42564     +          +     0.47005499648247 * S_deg_malig ;
MPRINT(EM_DIAGRAM):   H12 = -0.10284288284194 * S_AvgAge + 0.37352136247344 * S_AvgTumorSize + 
0.68676513170483 * S_Avginv_node_group + 0.47005499648247 * S_deg_malig ;
42565     +   H13  =      0.9145919034759 * S_AvgAge  +     0.05826862125007 *
42566     +        S_AvgTumorSize  +    -0.00110862274069 * S_Avginv_node_group
42567     +          +     1.75176090163572 * S_deg_malig ;
MPRINT(EM_DIAGRAM):   H13 = 0.9145919034759 * S_AvgAge + 0.05826862125007 * S_AvgTumorSize + 
-0.00110862274069 * S_Avginv_node_group + 1.75176090163572 * S_deg_malig ;
42568     +   H11  = H11  +     0.36327134003845 * IMP_node_capsno
42569     +          +    -0.61958170054396 * breastleft  +    -0.76320688913225 *
42570     +        irradiatno ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.36327134003845 * IMP_node_capsno + -0.61958170054396 * 
breastleft + -0.76320688913225 * irradiatno ;
42571     +   H12  = H12  +     0.79264758501102 * IMP_node_capsno
42572     +          +     0.38736672542142 * breastleft  +    -0.41943897063306 *
42573     +        irradiatno ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.79264758501102 * IMP_node_capsno + 0.38736672542142 * 
breastleft + -0.41943897063306 * irradiatno ;
42574     +   H13  = H13  +    -0.57775127561597 * IMP_node_capsno
42575     +          +     0.72019942479724 * breastleft  +    -0.27388143245069 *
42576     +        irradiatno ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.57775127561597 * IMP_node_capsno + 0.72019942479724 * 
breastleft + -0.27388143245069 * irradiatno ;
42577     +   H11  = H11  +     0.03389920437167 * age20_29  +     0.72089986894102 *
42578     +        age30_39  +     0.28798904753624 * age40_49  +     0.44335242159532 *
42579     +        age50_59  +     0.52451229055658 * age60_69  +     0.26756102661582 *
42580     +        breast_quadcentral  +    -0.27707826700111 * breast_quadleft_low
42581     +          +    -0.50619587378469 * breast_quadleft_up
42582     +          +     0.32385655977639 * breast_quadright_low
42583     +          +    -0.34095159639954 * inv_nodes0_2  +      0.4491951931604 *
42584     +        inv_nodes12_14  +    -0.18585971024084 * inv_nodes15_17
42585     +          +     0.46197576963823 * inv_nodes24_26  +     1.13872977786161 *
42586     +        inv_nodes3_5  +    -0.24695704463614 * inv_nodes6_8
42587     +          +     -1.6254898573616 * menopausege40  +    -0.92858614182967 *
42588     +        menopauselt40  +    -0.38889900414931 * tumor_size0_4
42589     +          +    -1.07107947032064 * tumor_size10_14  +     0.03210466953987 *
42590     +        tumor_size15_19  +     2.09618876020959 * tumor_size20_24
42591     +          +     -0.2438896271209 * tumor_size25_29  +    -0.22402647329776 *
42592     +        tumor_size30_34  +     0.34369986972179 * tumor_size35_39
42593     +          +     0.10609442400314 * tumor_size40_44  +    -0.33854013913445 *
42594     +        tumor_size45_49  +    -0.02593198988185 * tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03389920437167 * age20_29 + 0.72089986894102 * age30_39 + 
0.28798904753624 * age40_49 + 0.44335242159532 * age50_59 + 0.52451229055658 * age60_69 + 
0.26756102661582 * breast_quadcentral + -0.27707826700111 * breast_quadleft_low + 
-0.50619587378469 * breast_quadleft_up + 0.32385655977639 * breast_quadright_low + 
-0.34095159639954 * inv_nodes0_2 + 0.4491951931604 * inv_nodes12_14 + -0.18585971024084 * 
inv_nodes15_17 + 0.46197576963823 * inv_nodes24_26 + 1.13872977786161 * inv_nodes3_5 + 
-0.24695704463614 * inv_nodes6_8 + -1.6254898573616 * menopausege40 + -0.92858614182967 * 
menopauselt40 + -0.38889900414931 * tumor_size0_4 + -1.07107947032064 * tumor_size10_14 + 
0.03210466953987 * tumor_size15_19 + 2.09618876020959 * tumor_size20_24 + -0.2438896271209 * 
tumor_size25_29 + -0.22402647329776 * tumor_size30_34 + 0.34369986972179 * tumor_size35_39 + 
0.10609442400314 * tumor_size40_44 + -0.33854013913445 * tumor_size45_49 + -0.02593198988185 * 
tumor_size5_9 ;
42595     +   H12  = H12  +     0.01685296927978 * age20_29  +     0.35307919317833 *
42596     +        age30_39  +    -0.69893461072245 * age40_49  +    -0.24523441741186 *
42597     +        age50_59  +     0.07558333902437 * age60_69  +     0.37289958336996 *
42598     +        breast_quadcentral  +     0.36773572083573 * breast_quadleft_low
42599     +          +     1.18722346758725 * breast_quadleft_up
42600     +          +     0.06349587968543 * breast_quadright_low
42601     +          +      -0.059174362514 * inv_nodes0_2  +     0.15010019016924 *
42602     +        inv_nodes12_14  +     0.21292950214496 * inv_nodes15_17
42603     +          +    -0.38120373140886 * inv_nodes24_26  +    -0.78617065785688 *
42604     +        inv_nodes3_5  +    -0.53988580512066 * inv_nodes6_8
42605     +          +     0.37876358329232 * menopausege40  +     0.98534893153269 *
42606     +        menopauselt40  +     0.26937806074223 * tumor_size0_4
42607     +          +    -0.42069656657828 * tumor_size10_14  +    -0.06792429022016 *
42608     +        tumor_size15_19  +     0.58136904760064 * tumor_size20_24
42609     +          +    -0.08769804820483 * tumor_size25_29  +     0.03374092030048 *
42610     +        tumor_size30_34  +      0.1829108052925 * tumor_size35_39
42611     +          +     0.01690568296329 * tumor_size40_44  +     0.13224531669088 *
42612     +        tumor_size45_49  +    -0.22204959796125 * tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01685296927978 * age20_29 + 0.35307919317833 * age30_39 + 
-0.69893461072245 * age40_49 + -0.24523441741186 * age50_59 + 0.07558333902437 * age60_69 + 
0.37289958336996 * breast_quadcentral + 0.36773572083573 * breast_quadleft_low + 
1.18722346758725 * breast_quadleft_up + 0.06349587968543 * breast_quadright_low + 
-0.059174362514 * inv_nodes0_2 + 0.15010019016924 * inv_nodes12_14 + 0.21292950214496 * 
inv_nodes15_17 + -0.38120373140886 * inv_nodes24_26 + -0.78617065785688 * inv_nodes3_5 + 
-0.53988580512066 * inv_nodes6_8 + 0.37876358329232 * menopausege40 + 0.98534893153269 * 
menopauselt40 + 0.26937806074223 * tumor_size0_4 + -0.42069656657828 * tumor_size10_14 + 
-0.06792429022016 * tumor_size15_19 + 0.58136904760064 * tumor_size20_24 + -0.08769804820483 * 
tumor_size25_29 + 0.03374092030048 * tumor_size30_34 + 0.1829108052925 * tumor_size35_39 + 
0.01690568296329 * tumor_size40_44 + 0.13224531669088 * tumor_size45_49 + -0.22204959796125 * 
tumor_size5_9 ;
42613     +   H13  = H13  +     0.18753630570782 * age20_29  +    -0.03350421785345 *
42614     +        age30_39  +     0.14623047416945 * age40_49  +    -0.41701616903549 *
42615     +        age50_59  +     0.89967320394619 * age60_69  +    -0.20761226509696 *
42616     +        breast_quadcentral  +    -1.04013447085256 * breast_quadleft_low
42617     +          +     -1.7692938970504 * breast_quadleft_up
42618     +          +     0.20743849640219 * breast_quadright_low
42619     +          +    -0.29974021420975 * inv_nodes0_2  +     0.85993563103741 *
42620     +        inv_nodes12_14  +     0.50250813126704 * inv_nodes15_17
42621     +          +     0.35668817181134 * inv_nodes24_26  +     1.00306353211516 *
42622     +        inv_nodes3_5  +      0.3582805661238 * inv_nodes6_8
42623     +          +     0.31231492228923 * menopausege40  +     0.61342571580869 *
42624     +        menopauselt40  +     0.20376513631778 * tumor_size0_4
42625     +          +      -0.185934474148 * tumor_size10_14  +    -0.10040191113771 *
42626     +        tumor_size15_19  +      0.1860239709766 * tumor_size20_24
42627     +          +     0.72634109614906 * tumor_size25_29  +     0.08646236423332 *
42628     +        tumor_size30_34  +     0.36660157691503 * tumor_size35_39
42629     +          +    -0.82183765104013 * tumor_size40_44  +     0.38021345065478 *
42630     +        tumor_size45_49  +    -0.06805996233089 * tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.18753630570782 * age20_29 + -0.03350421785345 * age30_39 + 
0.14623047416945 * age40_49 + -0.41701616903549 * age50_59 + 0.89967320394619 * age60_69 + 
-0.20761226509696 * breast_quadcentral + -1.04013447085256 * breast_quadleft_low + 
-1.7692938970504 * breast_quadleft_up + 0.20743849640219 * breast_quadright_low + 
-0.29974021420975 * inv_nodes0_2 + 0.85993563103741 * inv_nodes12_14 + 0.50250813126704 * 
inv_nodes15_17 + 0.35668817181134 * inv_nodes24_26 + 1.00306353211516 * inv_nodes3_5 + 
0.3582805661238 * inv_nodes6_8 + 0.31231492228923 * menopausege40 + 0.61342571580869 * 
menopauselt40 + 0.20376513631778 * tumor_size0_4 + -0.185934474148 * tumor_size10_14 + 
-0.10040191113771 * tumor_size15_19 + 0.1860239709766 * tumor_size20_24 + 0.72634109614906 * 
tumor_size25_29 + 0.08646236423332 * tumor_size30_34 + 0.36660157691503 * tumor_size35_39 + 
-0.82183765104013 * tumor_size40_44 + 0.38021345065478 * tumor_size45_49 + -0.06805996233089 * 
tumor_size5_9 ;
42631     +   H11  =     1.87635201395074 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.87635201395074 + H11 ;
42632     +   H12  =     0.04770355881681 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.04770355881681 + H12 ;
42633     +   H13  =      -1.760700478131 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.760700478131 + H13 ;
42634     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
42635     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
42636     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
42637     +END;
MPRINT(EM_DIAGRAM):   END;
42638     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42639     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
42640     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
42641     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
42642     +END;
MPRINT(EM_DIAGRAM):   END;
42643     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42644     +*** Writing the Node class ;
MPRINT(EM_DIAGRAM):   *** Writing the Node class ;
42645     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42646     +
42647     +*** Generate dummy variables for class ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for class ;
42648     +drop classrecurrence_events classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   drop classrecurrence_events classno_recurrence_events ;
42649     +label F_class = 'From: class' ;
MPRINT(EM_DIAGRAM):   label F_class = 'From: class' ;
42650     +length F_class $ 20;
MPRINT(EM_DIAGRAM):   length F_class $ 20;
42651     +F_class = put( class , $20. );
MPRINT(EM_DIAGRAM):   F_class = put( class , $20. );
42652     +%DMNORMIP( F_class )
MPRINT(DMNORMIP):   call dmnorm(F_class,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42653     +if missing( class ) then do;
MPRINT(EM_DIAGRAM):   if missing( class ) then do;
42654     +   classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   classrecurrence_events = .;
42655     +   classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   classno_recurrence_events = .;
42656     +end;
MPRINT(EM_DIAGRAM):   end;
42657     +else do;
MPRINT(EM_DIAGRAM):   else do;
42658     +   if F_class = 'NO-RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   if F_class = 'NO-RECURRENCE-EVENTS' then do;
42659     +      classrecurrence_events = 0;
MPRINT(EM_DIAGRAM):   classrecurrence_events = 0;
42660     +      classno_recurrence_events = 1;
MPRINT(EM_DIAGRAM):   classno_recurrence_events = 1;
42661     +   end;
MPRINT(EM_DIAGRAM):   end;
42662     +   else if F_class = 'RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else if F_class = 'RECURRENCE-EVENTS' then do;
42663     +      classrecurrence_events = 1;
MPRINT(EM_DIAGRAM):   classrecurrence_events = 1;
42664     +      classno_recurrence_events = 0;
MPRINT(EM_DIAGRAM):   classno_recurrence_events = 0;
42665     +   end;
MPRINT(EM_DIAGRAM):   end;
42666     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42667     +      classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   classrecurrence_events = .;
42668     +      classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   classno_recurrence_events = .;
42669     +   end;
MPRINT(EM_DIAGRAM):   end;
42670     +end;
MPRINT(EM_DIAGRAM):   end;
42671     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42672     +   P_classrecurrence_events  =     2.49224982498149 * H11
42673     +          +     1.14059984464365 * H12  +     2.20917444320522 * H13 ;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = 2.49224982498149 * H11 + 1.14059984464365 * 
H12 + 2.20917444320522 * H13 ;
42674     +   P_classrecurrence_events  =    -1.04524170486537 + P_classrecurrence_events
42675     +         ;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = -1.04524170486537 + P_classrecurrence_events ;
42676     +   P_classno_recurrence_events  = 0;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = 0;
42677     +   _MAX_ = MAX (P_classrecurrence_events , P_classno_recurrence_events );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_classrecurrence_events , P_classno_recurrence_events );
42678     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
42679     +   P_classrecurrence_events  = EXP(P_classrecurrence_events  - _MAX_);
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = EXP(P_classrecurrence_events - _MAX_);
42680     +   _SUM_ = _SUM_ + P_classrecurrence_events ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_classrecurrence_events ;
42681     +   P_classno_recurrence_events  = EXP(P_classno_recurrence_events  - _MAX_);
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = EXP(P_classno_recurrence_events - _MAX_);
42682     +   _SUM_ = _SUM_ + P_classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_classno_recurrence_events ;
42683     +   P_classrecurrence_events  = P_classrecurrence_events  / _SUM_;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = P_classrecurrence_events / _SUM_;
42684     +   P_classno_recurrence_events  = P_classno_recurrence_events  / _SUM_;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = P_classno_recurrence_events / _SUM_;
42685     +END;
MPRINT(EM_DIAGRAM):   END;
42686     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42687     +   P_classrecurrence_events  = .;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = .;
42688     +   P_classno_recurrence_events  = .;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = .;
42689     +END;
MPRINT(EM_DIAGRAM):   END;
42690     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
42691     +   P_classrecurrence_events  =     0.29203539823008;
MPRINT(EM_DIAGRAM):   P_classrecurrence_events = 0.29203539823008;
42692     +   P_classno_recurrence_events  =     0.70796460176991;
MPRINT(EM_DIAGRAM):   P_classno_recurrence_events = 0.70796460176991;
42693     +END;
MPRINT(EM_DIAGRAM):   END;
42694     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
42695     +*** Writing the Residuals  of the Node class ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node class ;
42696     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
42697     +IF MISSING( classrecurrence_events ) THEN R_classrecurrence_events  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( classrecurrence_events ) THEN R_classrecurrence_events = . ;
42698     +ELSE R_classrecurrence_events  = classrecurrence_events  -
42699     +        P_classrecurrence_events ;
MPRINT(EM_DIAGRAM):   ELSE R_classrecurrence_events = classrecurrence_events - 
P_classrecurrence_events ;
42700     +IF MISSING( classno_recurrence_events ) THEN R_classno_recurrence_events
42701     +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( classno_recurrence_events ) THEN R_classno_recurrence_events 
= . ;
42702     +ELSE R_classno_recurrence_events  = classno_recurrence_events  -
42703     +        P_classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   ELSE R_classno_recurrence_events = classno_recurrence_events - 
P_classno_recurrence_events ;
42704     +
42705     +
42706     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
42707     +label D_CLASS = 'Decision: class' ;
MPRINT(EM_DIAGRAM):   label D_CLASS = 'Decision: class' ;
42708     +label EP_CLASS = 'Expected Profit: class' ;
MPRINT(EM_DIAGRAM):   label EP_CLASS = 'Expected Profit: class' ;
42709     +label BP_CLASS = 'Best Profit: class' ;
MPRINT(EM_DIAGRAM):   label BP_CLASS = 'Best Profit: class' ;
42710     +label CP_CLASS = 'Computed Profit: class' ;
MPRINT(EM_DIAGRAM):   label CP_CLASS = 'Computed Profit: class' ;
42711     +
42712     +length D_CLASS $ 20;
MPRINT(EM_DIAGRAM):   length D_CLASS $ 20;
42713     +
42714     +D_CLASS = ' ';
MPRINT(EM_DIAGRAM):   D_CLASS = ' ';
42715     +EP_CLASS = .;
MPRINT(EM_DIAGRAM):   EP_CLASS = .;
42716     +BP_CLASS = .;
MPRINT(EM_DIAGRAM):   BP_CLASS = .;
42717     +CP_CLASS = .;
MPRINT(EM_DIAGRAM):   CP_CLASS = .;
42718     +
42719     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
42720     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
42721     +
42722     +D_CLASS = 'RECURRENCE-EVENTS' ;
MPRINT(EM_DIAGRAM):   D_CLASS = 'RECURRENCE-EVENTS' ;
42723     +EP_CLASS = P_classrecurrence_events * 1 + P_classno_recurrence_events * 0;
MPRINT(EM_DIAGRAM):   EP_CLASS = P_classrecurrence_events * 1 + P_classno_recurrence_events * 
0;
42724     +drop _sum;
MPRINT(EM_DIAGRAM):   drop _sum;
42725     +_sum = P_classrecurrence_events * 0 + P_classno_recurrence_events * 1;
MPRINT(EM_DIAGRAM):   _sum = P_classrecurrence_events * 0 + P_classno_recurrence_events * 1;
42726     +if _sum > EP_CLASS + 4.547474E-13 then do;
MPRINT(EM_DIAGRAM):   if _sum > EP_CLASS + 4.547474E-13 then do;
42727     +   EP_CLASS = _sum; _decnum = 2;
MPRINT(EM_DIAGRAM):   EP_CLASS = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
42728     +   D_CLASS = 'NO-RECURRENCE-EVENTS' ;
MPRINT(EM_DIAGRAM):   D_CLASS = 'NO-RECURRENCE-EVENTS' ;
42729     +end;
MPRINT(EM_DIAGRAM):   end;
42730     +
42731     +*** Decision Matrix;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
42732     +array NEURALdema [2,2] _temporary_ (
42733     +/* row 1 */  1 0
42734     +/* row 2 */  0 1
42735     +);
MPRINT(EM_DIAGRAM):   array NEURALdema [2,2] _temporary_ ( 1 0 0 1 );
42736     +
42737     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
42738     +drop _tarnum; select( F_class );
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_class );
42739     +   when('RECURRENCE-EVENTS' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   when('RECURRENCE-EVENTS' ) _tarnum = 1;
42740     +   when('NO-RECURRENCE-EVENTS' ) _tarnum = 2;
MPRINT(EM_DIAGRAM):   when('NO-RECURRENCE-EVENTS' ) _tarnum = 2;
42741     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
42742     +end;
MPRINT(EM_DIAGRAM):   end;
42743     +if _tarnum <= 0 then goto NEURALdeex;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto NEURALdeex;
42744     +
42745     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
42746     +CP_CLASS = NEURALdema [_tarnum,_decnum];
MPRINT(EM_DIAGRAM):   CP_CLASS = NEURALdema [_tarnum,_decnum];
42747     +
42748     +*** Best Possible Consequence of Any Decision without Cost;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
42749     +array NEURALdebe [2] _temporary_ ( 1 1);
MPRINT(EM_DIAGRAM):   array NEURALdebe [2] _temporary_ ( 1 1);
42750     +BP_CLASS = NEURALdebe [_tarnum];
MPRINT(EM_DIAGRAM):   BP_CLASS = NEURALdebe [_tarnum];
42751     +
42752     +
42753     +NEURALdeex:;
MPRINT(EM_DIAGRAM):   NEURALdeex:;
42754     +
42755     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
42756     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42757     +*** Writing the I_class  AND U_class ;
MPRINT(EM_DIAGRAM):   *** Writing the I_class AND U_class ;
42758     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42759     +_MAXP_ = P_classrecurrence_events ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_classrecurrence_events ;
42760     +I_class  = "RECURRENCE-EVENTS   " ;
MPRINT(EM_DIAGRAM):   I_class = "RECURRENCE-EVENTS   " ;
42761     +U_class  = "recurrence-events   " ;
MPRINT(EM_DIAGRAM):   U_class = "recurrence-events   " ;
42762     +IF( _MAXP_ LT P_classno_recurrence_events  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_classno_recurrence_events ) THEN DO;
42763     +   _MAXP_ = P_classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_classno_recurrence_events ;
42764     +   I_class  = "NO-RECURRENCE-EVENTS" ;
MPRINT(EM_DIAGRAM):   I_class = "NO-RECURRENCE-EVENTS" ;
42765     +   U_class  = "no-recurrence-events" ;
MPRINT(EM_DIAGRAM):   U_class = "no-recurrence-events" ;
42766     +END;
MPRINT(EM_DIAGRAM):   END;
42767     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
42768     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
42769     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
42770     +drop
42771     +H11
42772     +H12
42773     +H13
42774     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
42775     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
42776      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IMPT_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
42777      quit;
42778      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
42779      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42780      * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
42781      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"D:\\127097210_Pahuja\Workspaces\EMWS1\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural_TRAIN out=WORK.M2KES98Q noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KES98Q;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KES98Q(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KES98Q;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KES98Q;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3JOTD93 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JOTD93;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3JOTD93;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R3KIUR(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3JOTD93;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JOTD93;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3JOTD93;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then 
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JOTD93;
MPRINT(EMADVISECOLUMNS):   set WORK.M3JOTD93;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Impt_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Impt_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_CLASSRECURRENCE_EVENTS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_CLASSRECURRENCE_EVENTS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("P_CLASSNO_RECURRENCE_EVENTS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_CLASSNO_RECURRENCE_EVENTS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("F_CLASS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("I_CLASS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("U_CLASS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("D_CLASS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("EP_CLASS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("CP_CLASS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("BP_CLASS") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("CLASS") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
43138      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
43139      set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
43140      where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
43141      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

43142      data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMINFO;
43143      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
43144      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
43145      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
43149      run;
43150      data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMINFO;
43151      set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
43152      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

43153      proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
43154      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
43155      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43156      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
43157      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
43158      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43159      proc sort data = EMWS1.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
43160      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
43161      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

43162      data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMINFO;
43163      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
43164      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
43165      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

43166      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
43167      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
43168      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
43169      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS1.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
