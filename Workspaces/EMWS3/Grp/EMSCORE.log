MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 16, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "02:30:42 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                April 16, 2022
Time:                02:30:42 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1IL07L8 "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1IL07L8 new;
MPRINT(EM_DIAGRAM):   run;
35096      %let EMEXCEPTIONSTRING=;
35097      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
35098      * SCORE: Grp;
MPRINT(EM_DIAGRAM):   * SCORE: Grp;
35099      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35100      %let EM_ACTION = SCORE;
35101      %let syscc = 0;
35102      %macro main;
35103      
35104         filename temp catalog 'sashelp.emutil.gp_macros.source';
35105         %include temp;
35106         filename temp;
35107      
35108         %SetProperties;
35109      
35110         %if %upcase(&EM_ACTION) = CREATE %then %do;
35111      
35112             filename temp catalog 'sashelp.emutil.gp_create.source';
35113             %include temp;
35114             filename temp;
35115      
35116             %create;
35117         %end;
35118         %else
35119         %if %upcase(&EM_ACTION) = TRAIN %then %do;
35120      
35121             filename temp catalog 'sashelp.emutil.gp_train.source';
35122             %include temp;
35123             filename temp;
35124      
35125             %train;
35126         %end;
35127         %else
35128         %if %upcase(&EM_ACTION) = SCORE %then %do;
35129      
35130             filename temp catalog 'sashelp.emutil.gp_score.source';
35131             %include temp;
35132             filename temp;
35133      
35134             %score;
35135         %end;
35136         %else
35137         %if %upcase(&EM_ACTION) = REPORT %then %do;
35138      
35139             filename temp catalog 'sashelp.emutil.gp_report.source';
35140             %include temp;
35141             filename temp;
35142      
35143             %report;
35144      
35145         %end;
35146         %else
35147         %if %upcase(&EM_ACTION) = POSTLOOP %then %do;
35148      
35149             filename temp catalog 'sashelp.emutil.gp_postloop.source';
35150             %include temp;
35151             filename temp;
35152      
35153             %postloop;
35154      
35155         %end;
35156      
35157         %doendm:
35158      %mend main;
35159      
35160      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.gp_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.GP_MACROS.SOURCE.
35161     +%macro SetProperties;
35162     +   %em_checkmacro(name=EM_PROPERTY_MODE,            global=Y, value=STRATIFY);
35163     +   %em_checkmacro(name=EM_PROPERTY_TARGETGROUP,     global=Y, value=Y);
35164     +   %em_checkmacro(name=EM_PROPERTY_INDEXCOUNT,      global=Y, value=10);
35165     +   %em_checkmacro(name=EM_PROPERTY_MINIMUMOBS,      global=Y, value=10);
35166     +   %em_checkmacro(name=EM_PROPERTY_SIZETYPE,        global=Y, value=PERCENT);
35167     +   %em_checkmacro(name=EM_PROPERTY_SIZEOBS,         global=Y, value=.);
35168     +   %em_checkmacro(name=EM_PROPERTY_SIZEPERCENT,     global=Y, value=10);
35169     +%mend SetProperties;
35170     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.gp_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.GP_SCORE.SOURCE.
35171     +%macro scoreTables(data=, out=, scoreref=, prefref=, keepnum=0);
35172     +
35173     +   %if ("&data" ne "") and (%sysfunc(exist(&data)) or %sysfunc(exist(&data, VIEW))) %then %do;
35174     +       data &out;
35175     +          set &data
35176     +          %if &keepNum %then %do;
35177     +              (keep=%emGrpKeep %emGrpRej)
35178     +          %end;
35179     +          ;
35180     +          %if %sysfunc(fexist(&prefref)) %then %do;
35181     +              %inc &prefref;
35182     +          %end;
35183     +          %inc &scoreref;
35184     +       run;
35185     +   %end;
35186     +
35187     +%mend scoretables;
35188     +
35189     +%macro makeExportCode;
35190     +   %em_getname(key=EXPORTCODE, type=FILE, extension=sas);
35191     +   %em_getName(key=GROUPINFO,  type=DATA);
35192     +
35193     +   filename x "&EM_USER_EXPORTCODE";
35194     +
35195     +   data _null_;
35196     +      file x;
35197     +       set &em_user_groupinfo;
35198     +       if _LOOP_ = &emloopnumber and _where_ ne '' then
35199     +          put 'if ' _where_ ' then output;';
35200     +   run;
35201     +
35202     +   %em_getname(key=PRECODE, type=FILE, extension=sas);
35203     +   filename _pregrp "&em_user_precode";
35204     +
35205     +   filename _grpdrp catalog 'sashelp.emutil.em_varmacro.source';
35206     +   %inc _grpdrp;
35207     +   filename _grpdrp;
35208     +   %em_varMacro(name=emGrpKeep, metadata=&EM_IMPORT_DATA_CMETA, where=%nrbquote(ROLE ne 'REJECTED'), key=NAME, nummacro=GrpKeep);
35209     +
35210     +    %em_varMacro(name=emGrpRej, metadata=&EM_DATA_VARIABLESET, where=%nrbquote(ROLE eq 'REJECTED' and GROUPROLE='GROUP'), key=NAME, nummacro=GrpRej);
35211     +
35212     +   %scoreTables(data=&em_import_data,        out=&em_export_train,       scoreref=x, prefref=_pregrp, keepnum=&GrpKeep);
35213     +   %scoreTables(data=&em_import_validate,    out=&em_export_validate,    scoreref=x, prefref=_pregrp, keepnum=&GrpKeep);
35214     +   %scoreTables(data=&em_import_test,        out=&em_export_test,        scoreref=x, prefref=_pregrp, keepnum=&GrpKeep);
35215     +   %scoreTables(data=&em_import_score,       out=&em_export_score,       scoreref=x, prefref=_pregrp, keepnum=&GrpKeep);
35216     +   %scoreTables(data=&em_import_transaction, out=&em_export_transaction, scoreref=x, prefref=_pregrp, keepnum=&GrpKeep);
35217     +
35218     +   filename x;
35219     +   filename _pregrp;
35220     +
35221     +%mend makeExportCode;
35222     +
35223     +%macro makeCode;
35224     +
35225     +   %if &emloopmode = LOOP %then %do;
35226     +       %em_getname(key=HPDMSCORE, type=FILE, extension=sas);
35227     +       filename x "&em_user_HPDMSCORE";
35228     +
35229     +       %em_getname(key=PRECODE, type=FILE, extension=sas);
35230     +       filename _pregrp "&em_user_precode";
35231     +       %em_copyfile(infref=_pregrp, outfref=x);
35232     +       filename _pregrp;
35233     +
35234     +       data _null_;
35235     +          file x mod;
35236     +          set &em_user_groupinfo;
35237     +          if _LOOP_ = &emloopnumber and _where_ ne '' then
35238     +             put 'if ^(' _where_ ') then return;';
35239     +       run;
35240     +       filename x;
35241     +
35242     +       filename x "&EM_FILE_EMFLOWSCORECODE";
35243     +
35244     +       %if "&emloopnumber" = "1" %then %do;
35245     +           %em_getname(key=PRECODE, type=FILE, extension=sas);
35246     +           filename _pregrp "&em_user_precode";
35247     +           %em_copyfile(infref=_pregrp, outfref=x);
35248     +           filename _pregrp;
35249     +       %end;
35250     +
35251     +       data _null_;
35252     +          file x
35253     +          %if &emloopnumber = 1 %then %do;
35254     +              mod
35255     +          %end;
35256     +          ;
35257     +          set &em_user_groupinfo;
35258     +          if _LOOP_ = &emloopnumber and _where_ ne '' then
35259     +             put 'if ' _where_ ' then do;';
35260     +       run;
35261     +
35262     +       filename y "&EM_FILE_EMPUBLISHSCORECODE";
35263     +       %if "&EM_PROPERTY_MODE" ne "CROSSVALIDATION"  %then %do;
35264     +           %em_copyfile(infref=x, outfref=y);
35265     +       %end;
35266     +       %else %do;
35267     +           %if "&emloopnumber" = "1" %then %do;
35268     +               %em_getname(key=PRECODE, type=FILE, extension=sas);
35269     +                filename _pregrp "&em_user_precode";
35270     +                %em_copyfile(infref=_pregrp, outfref=y);
35271     +               filename _pregrp;
35272     +           %end;
35273     +           data _null_;
35274     +             file y
35275     +             %if &emloopnumber = 1 %then %do;
35276     +                 mod
35277     +             %end;
35278     +             ;
35279     +             set &em_user_groupinfo;
35280     +             if _LOOP_ = &emloopnumber and _where_ ne '' then do;
35281     +                _where_ = tranwrd(_where_, '^(', '(');
35282     +                put 'if ' _where_ ' then do;';
35283     +                put '_XVAL_=' "&emloopnumber" ';' ;
35284     +             end;
35285     +           run;
35286     +       %end;
35287     +       filename Y ;
35288     +       filename x ;
35289     +   %end;
35290     +%mend makeCode;
35291     +
35292     +%macro score;
35293     +
35294     +   %if "&emloopmode" eq "LOOP" %then %do;
35295     +
35296     +       %em_getName(key=groupinfo,   type=DATA);
35297     +
35298     +       %if %sysfunc(exist(&em_user_groupinfo)) %then %do;
35299     +           %makeCode;
35300     +           %makeExportCode;
35301     +       %end;
35302     +   %end;
35303     +   %else
35304     +   %if "&emLoopmode" eq "POSTLOOP" %then %do;
35305     +       filename gpDelta "&EM_FILE_CDELTA_TRAIN";
35306     +       data _null_;
35307     +          rc = fdelete('gpdelta');
35308     +          run;
35309     +       filename gpdelta;
35310     +   %end;
35311     +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SCORE):  ;
MPRINT(MAKECODE):  ;
MPRINT(MAKECODE):   filename x "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\HPDMSCORE.sas";
MPRINT(MAKECODE):  ;
MPRINT(MAKECODE):   filename _pregrp "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\PRECODE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file x lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_pregrp",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file X is:
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\HPDMSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=April 16, 2022 02:30:41 o'clock,
      Create Time=April 16, 2022 02:30:41 o'clock

NOTE: 0 records were written to the file X.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKECODE):  ;
MPRINT(MAKECODE):   filename _pregrp;
NOTE: Fileref _PREGRP has been deassigned.
MPRINT(MAKECODE):   data _null_;
MPRINT(MAKECODE):   file x mod;
MPRINT(MAKECODE):   set EMWS3.Grp_groupinfo;
MPRINT(MAKECODE):   if _LOOP_ = 1 and _where_ ne '' then put 'if ^(' _where_ ') then return;';
MPRINT(MAKECODE):   run;

NOTE: The file X is:
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\HPDMSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 16, 2022 02:30:41 o'clock,
      Create Time=April 16, 2022 02:30:41 o'clock

NOTE: 1 record was written to the file X.
      The minimum record length was 32.
      The maximum record length was 32.
NOTE: There were 1 observations read from the data set EMWS3.GRP_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKECODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(MAKECODE):   filename x "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMFLOWSCORE.sas";
MPRINT(MAKECODE):  ;
MPRINT(MAKECODE):   filename _pregrp "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\PRECODE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file x lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_pregrp",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file X is:
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=April 16, 2022 02:30:41 o'clock,
      Create Time=April 16, 2022 02:30:41 o'clock

NOTE: 0 records were written to the file X.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKECODE):  ;
MPRINT(MAKECODE):   filename _pregrp;
NOTE: Fileref _PREGRP has been deassigned.
MPRINT(MAKECODE):   data _null_;
MPRINT(MAKECODE):   file x mod ;
MPRINT(MAKECODE):   set EMWS3.Grp_groupinfo;
MPRINT(MAKECODE):   if _LOOP_ = 1 and _where_ ne '' then put 'if ' _where_ ' then do;';
MPRINT(MAKECODE):   run;

NOTE: The file X is:
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 16, 2022 02:30:41 o'clock,
      Create Time=April 16, 2022 02:30:41 o'clock

NOTE: 1 record was written to the file X.
      The minimum record length was 25.
      The maximum record length was 25.
NOTE: There were 1 observations read from the data set EMWS3.GRP_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKECODE):   filename y "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMPUBLISHSCORE.sas";
MPRINT(MAKECODE):  ;
MPRINT(MAKECODE):   filename _pregrp "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\PRECODE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file y lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_pregrp",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file Y is:
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=April 16, 2022 02:30:41 o'clock,
      Create Time=April 16, 2022 02:30:41 o'clock

NOTE: 0 records were written to the file Y.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKECODE):  ;
MPRINT(MAKECODE):   filename _pregrp;
NOTE: Fileref _PREGRP has been deassigned.
MPRINT(MAKECODE):   data _null_;
MPRINT(MAKECODE):   file y mod ;
MPRINT(MAKECODE):   set EMWS3.Grp_groupinfo;
MPRINT(MAKECODE):   if _LOOP_ = 1 and _where_ ne '' then do;
MPRINT(MAKECODE):   _where_ = tranwrd(_where_, '^(', '(');
MPRINT(MAKECODE):   put 'if ' _where_ ' then do;';
MPRINT(MAKECODE):   put '_XVAL_=' "1" ';' ;
MPRINT(MAKECODE):   end;
MPRINT(MAKECODE):   run;

NOTE: The file Y is:
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 16, 2022 02:30:41 o'clock,
      Create Time=April 16, 2022 02:30:41 o'clock

NOTE: 2 records were written to the file Y.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: There were 1 observations read from the data set EMWS3.GRP_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKECODE):   filename Y ;
NOTE: Fileref Y has been deassigned.
MPRINT(MAKECODE):   filename x ;
NOTE: Fileref X has been deassigned.
MPRINT(SCORE):  ;
MPRINT(MAKEEXPORTCODE):  ;
MPRINT(MAKEEXPORTCODE):  ;
MPRINT(MAKEEXPORTCODE):   filename x "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EXPORTCODE.sas";
MPRINT(MAKEEXPORTCODE):   data _null_;
MPRINT(MAKEEXPORTCODE):   file x;
MPRINT(MAKEEXPORTCODE):   set EMWS3.Grp_GROUPINFO;
MPRINT(MAKEEXPORTCODE):   if _LOOP_ = 1 and _where_ ne '' then put 'if ' _where_ ' then output;';
MPRINT(MAKEEXPORTCODE):   run;

NOTE: The file X is:
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EXPORTCODE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=April 16, 2022 02:30:41 o'clock,
      Create Time=April 16, 2022 02:30:41 o'clock

NOTE: 1 record was written to the file X.
      The minimum record length was 29.
      The maximum record length was 29.
NOTE: There were 1 observations read from the data set EMWS3.GRP_GROUPINFO.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEEXPORTCODE):  ;
MPRINT(MAKEEXPORTCODE):   filename _pregrp "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\PRECODE.sas";
MPRINT(MAKEEXPORTCODE):   filename _grpdrp catalog 'sashelp.emutil.em_varmacro.source';
NOTE: %INCLUDE (level 1) file _GRPDRP is file SASHELP.EMUTIL.EM_VARMACRO.SOURCE.
35313     +%macro em_varMacro(name=emMacro, metadata=, where=, key=NAME, nummacro=, maxvar=-1);
35315     +   filename macFile catalog 'work.emutil.macro.source';
35316     +   %let _METAOBS = 0;
35317     +   %let _maxvar = &maxvar;
35318     +   %if "&_maxvar" eq "" %then %let maxvar = -1;
35320     +   %if (%sysfunc(exist(&metadata))<1 and %sysfunc(exist(&metadata, VIEW))<1)
35321     +                   or (&metadata eq ) %then %do;
35322     +       %put * No metadata data set defined;
35323     +       %goto doend;
35324     +   %end;
35326     +   data _null_;
35327     +      length _STRING_ $80;
35328     +      retain _STRING_ '' maxvar 0;
35329     +      set &metadata end=eof;
35330     +      file macFile;
35331     +      %if %nrbquote(&where) ne %then %do;
35332     +          %let whereClause = where (%nrbquote(&where));
35333     +          %unquote(&whereClause);
35334     +      %end;
35335     +      if _N_=1 then do;
35336     +         string = "%"!!"macro &name;";
35337     +         put string;
35338     +      end;
35339     +      maxvar +1;
35340     +      if (length(_STRING_) + length(trim(&key))+ 4 < 80) then do;
35341     +         _STRING_ = trim(_STRING_)!!' '!!trim(&key);
35342     +         if eof
35343     +            %if  %sysevalf(&_maxvar > 0) %then %do;
35344     +                or maxvar >= &maxvar
35345     +            %end;
35346     +            then do;
35347     +            put _STRING_;
35348     +            string = "%"!!"mend &name;";
35349     +            put string;
35350     +            string = strip(put(_N_, best.));
35351     +            call symput('_METAOBS', string);
35352     +            %if (&nummacro ne ) %then %do;
35353     +                put "%" "global &nummacro;";
35354     +                put "%" "let &nummacro = " string ";";
35355     +            %end;
35356     +            stop;
35357     +         end;
35358     +      end;
35359     +      else do;
35360     +         put _STRING_;
35361     +         _string_ = TRIM(&key);
35362     +         if eof
35363     +            %if  %sysevalf(&_maxvar > 0) %then %do;
35364     +              or maxvar >= &maxvar
35365     +           %end;
35366     +            then do;
35367     +            put _STRING_;
35368     +            string = "%"!!"mend &name;";
35369     +            put string;
35370     +        end;
35371     +      end;
35372     +      if eof
35373     +         %if  %sysevalf(&_maxvar > 0) %then %do;
35374     +             or maxvar >= &maxvar
35375     +         %end;
35376     +         then do;
35377     +         string = strip(put(_N_, best.));
35378     +         call symput('_METAOBS', string);
35379     +         %if (&nummacro ne ) %then %do;
35380     +             put "%" "global &nummacro;";
35381     +             put "%" "let &nummacro = " string ";";
35382     +         %end;
35383     +         stop;
35384     +      end;
35385     +   run;
35387     +   %doend:
35388     +   %if ^&_METAOBS %then %do;
35389     +       data _null_;
35390     +          file macFile;
35391     +          put "%" "macro &name;";
35392     +          put "%" "mend &name;";
35393     +          %if (&nummacro ne ) %then %do;
35394     +              put "%" "global &nummacro;";
35395     +              put "%" "let &nummacro = 0;";
35396     +          %end;
35397     +      run;
35398     +   %end;
35399     +   %inc macFile;
35400     +   filename macFile;
35401     +%mend em_varMacro;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAKEEXPORTCODE):   filename _grpdrp;
NOTE: Fileref _GRPDRP has been deassigned.
MPRINT(EM_VARMACRO):   filename macFile catalog 'work.emutil.macro.source';
MPRINT(EM_VARMACRO):   data _null_;
MPRINT(EM_VARMACRO):   length _STRING_ $80;
MPRINT(EM_VARMACRO):   retain _STRING_ '' maxvar 0;
MPRINT(EM_VARMACRO):   set EMWS3.Trans_CMeta_TRAIN end=eof;
MPRINT(EM_VARMACRO):   file macFile;
MPRINT(EM_VARMACRO):   where (ROLE ne 'REJECTED');
MPRINT(EM_VARMACRO):   if _N_=1 then do;
MPRINT(EM_VARMACRO):   string = "%"!!"macro emGrpKeep;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   maxvar +1;
MPRINT(EM_VARMACRO):   if (length(_STRING_) + length(trim(NAME))+ 4 < 80) then do;
MPRINT(EM_VARMACRO):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend emGrpKeep;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   put "%" "global GrpKeep;";
MPRINT(EM_VARMACRO):   put "%" "let GrpKeep = " string ";";
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   else do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   _string_ = TRIM(NAME);
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend emGrpKeep;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   put "%" "global GrpKeep;";
MPRINT(EM_VARMACRO):   put "%" "let GrpKeep = " string ";";
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   run;

NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Sat, 16 Apr, 2022 02:30:42 AM,
      Last Modified=Sat, 16 Apr, 2022 02:30:42 AM,
      Filename=C:\Users\manas\AppData\Local\Temp\SAS Temporary Files\_TD16776_DESKTOP-GPKLHDH_\Prc2\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME

NOTE: 6 records were written to the file MACFILE.
      The minimum record length was 16.
      The maximum record length was 73.
NOTE: There were 14 observations read from the data set EMWS3.TRANS_CMETA_TRAIN.
      WHERE ROLE not = 'REJECTED';
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: %INCLUDE (level 1) file MACFILE is file WORK.EMUTIL.MACRO.SOURCE.
35402     +%macro emGrpKeep;
35403     +AvgAge AvgTumorSize Avginv_node_group _fold_ age breast breast_quad class
35404     +deg_malig inv_nodes irradiat menopause node_caps tumor_size
35405     +%mend emGrpKeep;
35406     +%global GrpKeep;
35407     +%let GrpKeep = 14 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_VARMACRO):   filename macFile;
NOTE: Fileref MACFILE has been deassigned.
MPRINT(MAKEEXPORTCODE):  ;
MPRINT(EM_VARMACRO):   filename macFile catalog 'work.emutil.macro.source';
MPRINT(EM_VARMACRO):   data _null_;
MPRINT(EM_VARMACRO):   length _STRING_ $80;
MPRINT(EM_VARMACRO):   retain _STRING_ '' maxvar 0;
MPRINT(EM_VARMACRO):   set EMWS3.Grp_VariableSet end=eof;
MPRINT(EM_VARMACRO):   file macFile;
MPRINT(EM_VARMACRO):   where (ROLE eq 'REJECTED' and GROUPROLE='GROUP');
MPRINT(EM_VARMACRO):   if _N_=1 then do;
MPRINT(EM_VARMACRO):   string = "%"!!"macro emGrpRej;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   maxvar +1;
MPRINT(EM_VARMACRO):   if (length(_STRING_) + length(trim(NAME))+ 4 < 80) then do;
MPRINT(EM_VARMACRO):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend emGrpRej;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   put "%" "global GrpRej;";
MPRINT(EM_VARMACRO):   put "%" "let GrpRej = " string ";";
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   else do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   _string_ = TRIM(NAME);
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend emGrpRej;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   put "%" "global GrpRej;";
MPRINT(EM_VARMACRO):   put "%" "let GrpRej = " string ";";
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   run;

NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sat, 16 Apr, 2022 02:30:42 AM,
      Last Modified=Sat, 16 Apr, 2022 02:30:42 AM,
      Filename=C:\Users\manas\AppData\Local\Temp\SAS Temporary Files\_TD16776_DESKTOP-GPKLHDH_\Prc2\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME

NOTE: 0 records were written to the file MACFILE.
NOTE: There were 0 observations read from the data set EMWS3.GRP_VARIABLESET.
      WHERE (ROLE='REJECTED') and (GROUPROLE='GROUP');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_VARMACRO):   data _null_;
MPRINT(EM_VARMACRO):   file macFile;
MPRINT(EM_VARMACRO):   put "%" "macro emGrpRej;";
MPRINT(EM_VARMACRO):   put "%" "mend emGrpRej;";
MPRINT(EM_VARMACRO):   put "%" "global GrpRej;";
MPRINT(EM_VARMACRO):   put "%" "let GrpRej = 0;";
MPRINT(EM_VARMACRO):   run;

NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sat, 16 Apr, 2022 02:30:42 AM,
      Last Modified=Sat, 16 Apr, 2022 02:30:42 AM,
      Filename=C:\Users\manas\AppData\Local\Temp\SAS Temporary Files\_TD16776_DESKTOP-GPKLHDH_\Prc2\emutil.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME

NOTE: 4 records were written to the file MACFILE.
      The minimum record length was 15.
      The maximum record length was 16.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file MACFILE is file WORK.EMUTIL.MACRO.SOURCE.
35408     +%macro emGrpRej;
35409     +%mend emGrpRej;
35410     +%global GrpRej;
35411     +%let GrpRej = 0;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_VARMACRO):   filename macFile;
NOTE: Fileref MACFILE has been deassigned.
MPRINT(MAKEEXPORTCODE):  ;
MPRINT(SCORETABLES):   data EMWS3.Grp_TRAIN;
MPRINT(SCORETABLES):   set EMWS3.Trans_TRAIN (keep
MPRINT(SCORETABLES):  =AvgAge AvgTumorSize Avginv_node_group _fold_ age breast breast_quad class deg_malig inv_nodes irradiat menopause node_caps tumor_size) ;
NOTE: Data file BAN210.EBREASTCANCER.DATA is in a format that is native to another host, or the file encoding does not match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
      performance.
NOTE: %INCLUDE (level 1) file _PREGRP is file D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\PRECODE.sas.
NOTE: %INCLUDE (level 1) ending.
NOTE: %INCLUDE (level 1) file X is file D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EXPORTCODE.sas.
35412     +if ^(_fold_ =1)  then output;
MPRINT(SCORETABLES):   if ^(_fold_ =1) then output;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SCORETABLES):   run;
NOTE: There were 286 observations read from the data set BAN210.EBREASTCANCER.
NOTE: View EMWS3.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
NOTE: There were 286 observations read from the data set EMWS3.IDS2_DATA.
NOTE: There were 286 observations read from the data set EMWS3.TRANS_TRAIN.
NOTE: The data set EMWS3.GRP_TRAIN has 0 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

MPRINT(MAKEEXPORTCODE):  ;
MPRINT(MAKEEXPORTCODE):  ;
MPRINT(MAKEEXPORTCODE):  ;
MPRINT(MAKEEXPORTCODE):  ;
MPRINT(MAKEEXPORTCODE):  ;
MPRINT(MAKEEXPORTCODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(MAKEEXPORTCODE):   filename _pregrp;
NOTE: Fileref _PREGRP has been deassigned.
MPRINT(SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Grp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35413      *------------------------------------------------------------*;
35414      * End SCORE: Grp;
35415      *------------------------------------------------------------*;
35416      

35418      filename emflow "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):     filename emflow "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMFLOWSCORE.sas";
35419      filename lpflow catalog "EMWS3.Grp_LOOP.EMFLOWCODE_1.source";
MPRINT(EM_DIAGRAM):   filename lpflow catalog "EMWS3.Grp_LOOP.EMFLOWCODE_1.source";
35420      %em_copyfile(infref=emflow, outfref=lpflow);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file lpflow lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("emflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file LPFLOW is:
      Catalog Name=EMWS3.GRP_LOOP.EMFLOWCODE_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Sat, 16 Apr, 2022 02:30:42 AM,
      Last Modified=Sat, 16 Apr, 2022 02:30:42 AM,
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\grp_loop.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME

NOTE: 1 record was written to the file LPFLOW.
      The minimum record length was 25.
      The maximum record length was 25.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;
35421      filename lpflow;
MPRINT(EM_DIAGRAM):   filename lpflow;
NOTE: Fileref LPFLOW has been deassigned.
35422      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
35423      filename empub "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename empub "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\EMPUBLISHSCORE.sas";
35424      filename lppub catalog "EMWS3.Grp_LOOP.EMPUBLISHCODE_1.source";
MPRINT(EM_DIAGRAM):   filename lppub catalog "EMWS3.Grp_LOOP.EMPUBLISHCODE_1.source";
35425      %em_copyfile(infref=empub, outfref=lppub);
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file lppub lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("empub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file LPPUB is:
      Catalog Name=EMWS3.GRP_LOOP.EMPUBLISHCODE_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=6,
      Created=Sat, 16 Apr, 2022 02:30:42 AM,
      Last Modified=Sat, 16 Apr, 2022 02:30:42 AM,
      Filename=D:\\127097210_Pahuja\Workspaces\EMWS3\grp_loop.sas7bcat,
      Release Created=9.0401M3,
      Host Created=X64_8HOME

NOTE: 2 records were written to the file LPPUB.
      The minimum record length was 9.
      The maximum record length was 24.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;
35426      filename lppub;
MPRINT(EM_DIAGRAM):   filename lppub;
NOTE: Fileref LPPUB has been deassigned.
35427      filename empub;
MPRINT(EM_DIAGRAM):   filename empub;
NOTE: Fileref EMPUB has been deassigned.
35428      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
35429      * Grp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Grp: Computing metadata for TRAIN data;
35430      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "D:\\127097210_Pahuja\Workspaces\EMWS3\Grp\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS3.Grp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS3.Grp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options fmterr;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
MPRINT(EMADVISECOLUMNS):   set EMWS3.Grp_TRAIN;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   stop;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
ERROR: File WORK.COLUMNMETA.DATA does not exist.
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS3.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS3.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS3.Grp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
ERROR: File WORK.COLUMNMETA.DATA does not exist.
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Grp";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Grp: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME)= '_FOLD_' then delete;
MPRINT(EM_DIAGRAM):   run;
WARNING: The data set EMWS3.GRP_CMETA_TRAIN may be incomplete.  When this step was stopped there were 0 observations and 15 variables.
MPRINT(EM_DIAGRAM):   filename _delta;
35486      proc sort data = EMWS3.Ids2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS3.Ids2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
35487      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
35488      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS3.IDS2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

35489      proc sort data = EMWS3.Grp_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS3.Grp_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
35490      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
35491      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS3.GRP_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

35492      data EMWS3.Grp_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS3.Grp_EMINFO;
35493      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
35494      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
35495      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 1 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS3.GRP_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

35496      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
35497      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
35498      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
35499      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
